{"executions":[{"a":24580146,"b":1425573312185657,"h":505343,"i":7578968,"e":11172855,"f":329822,"g":12284,"j":1708832,"k":350,"samples":{"2228":31,"2104":365,"1843":406,"1842":406,"1841":772,"1840":914,"2247":216,"1946":111,"2031":104,"2052":19,"1945":451,"1774":322,"1705":163,"2119":231,"2118":231,"2117":231,"1704":425,"1703":425,"1702":747,"1701":747,"1700":1700,"1778":252,"1777":252,"1776":252,"1699":837,"2217":25,"1698":1051,"1765":59,"1752":28,"2177":32,"2037":246,"1940":28,"1939":28,"1938":307,"1814":74,"1813":74,"1822":223,"2089":159,"2088":159,"1821":382,"1820":382,"1751":1005,"2211":172,"1827":61,"2019":26,"2018":26,"1826":220,"2115":38,"2237":125,"2236":125,"2108":116,"2050":65,"2049":65,"2048":65,"2047":65,"2046":182,"2045":182,"1737":881,"1801":37,"2140":189,"1909":127,"1908":127,"1907":127,"1906":316,"1905":428,"1974":67,"1775":130,"2106":393,"2004":30,"2003":30,"2002":423,"1782":26,"1781":26,"1780":26,"1779":26,"1711":538,"2029":180,"2028":180,"2027":180,"2026":180,"1769":565,"1768":565,"1824":80,"2242":91,"1823":172,"2145":79,"2144":79,"2190":117,"2189":117,"2188":117,"2187":117,"2143":197,"2142":197,"2141":197,"1710":3182,"2094":33,"2044":116,"1825":235,"1687":177,"1686":617,"1830":187,"2221":287,"2095":495,"2248":33,"2179":93,"2024":148,"2023":997,"1944":56,"1964":235,"1696":1649,"2153":60,"1880":380,"2066":62,"1685":176,"1684":459,"2207":52,"2054":134,"1800":33,"2212":212,"2022":330,"1933":571,"2163":113,"2162":113,"1636":186,"1661":77,"1660":77,"1659":204,"1850":80,"1658":284,"1635":1565,"2216":229,"1895":34,"1725":130,"2051":245,"1724":659,"2220":127,"2219":127,"1634":3352,"2171":30,"1633":3628,"1632":4531,"1631":6567,"2112":245,"1732":86,"2150":191,"2210":60,"1669":132,"2093":31,"2030":178,"2233":257,"2232":257,"1761":349,"1671":434,"1828":36,"1670":621,"2227":29,"1915":729,"1904":1019,"1903":1724,"1902":1724,"1767":342,"1766":342,"1911":100,"2078":71,"2139":30,"2243":134,"2132":760,"1984":86,"2099":61,"1983":147,"1982":147,"1981":1107,"2042":138,"1910":1345,"1804":309,"1803":309,"1802":309,"1771":2195,"1857":32,"1856":32,"1855":32,"1854":32,"1770":2228,"1918":166,"1917":166,"1879":396,"1878":396,"1630":13351,"1928":71,"1799":189,"1833":356,"1980":224,"1832":580,"1831":580,"1798":769,"2200":46,"2199":46,"1797":978,"2076":84,"2075":84,"2092":318,"2091":318,"2090":318,"1796":1510,"2085":101,"2084":101,"1640":2002,"2081":482,"2080":482,"2079":482,"1773":665,"2136":182,"2135":182,"2134":182,"1837":458,"2166":72,"2165":72,"1792":898,"1922":161,"1937":29,"1948":86,"1975":440,"1654":213,"2230":81,"2229":81,"1894":150,"1653":363,"2158":66,"2157":97,"2156":97,"2033":65,"2032":65,"2191":110,"2149":43,"1942":23,"1756":153,"2154":152,"1755":305,"1754":483,"1760":68,"1759":68,"1758":68,"1753":551,"2161":226,"2160":226,"2159":226,"2065":453,"2064":453,"1652":2,"1651":6,"1650":6,"1649":6,"1648":6,"1647":460,"1646":460,"1629":24597,"1628":24654,"1893":131,"2173":44,"1838":229,"2107":193,"1712":491,"1989":41,"1988":41,"1987":41,"1986":129,"1962":102,"2245":36,"1919":184,"2241":30,"2240":30,"2239":30,"1723":26,"1722":26,"1721":26,"1968":600,"1967":600,"1966":600,"1965":600,"1720":879,"1794":211,"1793":211,"1935":109,"1934":109,"1719":1302,"1718":1431,"2109":191,"1690":191,"1848":52,"1914":258,"1913":258,"1731":618,"1730":618,"1729":618,"1728":670,"2206":131,"2185":141,"2011":29,"2010":29,"2009":60,"1927":38,"1926":240,"1925":371,"1924":482,"1923":482,"2063":94,"1847":640,"2202":208,"2201":208,"1846":848,"1845":848,"1844":848,"2058":183,"2057":183,"2056":183,"2055":183,"1605":30134,"1604":33801,"1603":33801,"1602":33801,"1601":33801,"1600":33801,"1599":33801,"1598":33801,"1597":33801,"1596":33801,"1595":33801,"1594":33801,"1593":33801,"1579":33801}},{"a":25152452,"b":1425585886041384,"h":509088,"e":12583721,"i":7434859,"f":220574,"g":16524,"j":1366628,"k":12311,"samples":{"4411":81,"4489":345,"4474":105,"4384":533,"4270":72,"4269":72,"3863":38,"4473":112,"3862":150,"4505":487,"4504":487,"3861":746,"4144":179,"3973":110,"4300":265,"4299":265,"3972":591,"3971":591,"3970":591,"3969":668,"4390":35,"3826":155,"4101":377,"4100":649,"4099":649,"4141":214,"4140":214,"4210":121,"4209":121,"3825":1772,"4309":40,"4075":241,"4458":478,"4495":188,"4381":46,"4151":78,"4150":78,"4149":162,"4488":73,"3991":107,"4261":80,"4494":77,"4421":348,"4252":523,"4251":1446,"4250":1446,"4246":209,"4457":38,"4245":248,"4244":248,"4243":248,"4242":248,"4241":248,"4240":1775,"4461":33,"4104":70,"4497":274,"4496":274,"4028":345,"3978":2558,"4042":320,"4194":737,"4296":34,"4216":155,"4121":72,"4186":325,"4122":138,"3888":350,"4057":197,"4093":74,"4039":1593,"4427":80,"4213":42,"3919":985,"3877":528,"4383":45,"4005":478,"4004":901,"3876":1778,"4334":683,"4019":73,"3848":418,"3847":1102,"3841":39,"3840":1335,"3839":1335,"4475":36,"4327":191,"3998":42,"3921":134,"3920":134,"3885":638,"3884":783,"4425":184,"4358":40,"4357":40,"4356":225,"4061":153,"4340":151,"4339":151,"4338":151,"4060":305,"3883":1314,"3882":1505,"3881":1541,"3899":571,"4220":43,"3898":615,"4314":124,"4313":124,"4312":124,"3838":9807,"3977":492,"3976":492,"3975":627,"3949":436,"4371":297,"4370":297,"4369":297,"3948":1361,"4442":156,"4441":156,"4440":156,"3824":235,"3823":489,"3822":489,"3956":79,"3955":79,"3954":682,"3953":682,"4305":82,"4485":68,"4373":197,"4401":101,"4400":101,"4304":449,"4333":193,"4332":193,"4484":80,"4303":519,"4302":519,"4301":599,"4434":37,"4337":267,"4171":123,"4170":433,"4472":156,"4471":156,"4470":156,"4169":590,"4430":329,"4429":329,"4428":329,"4360":1057,"4359":1057,"4366":774,"4365":774,"3985":426,"3984":426,"3983":1201,"3982":2339,"3981":2339,"3980":2339,"3914":87,"3913":87,"3967":270,"3966":270,"3965":270,"3912":357,"3864":175,"4208":34,"4491":228,"4107":457,"3880":394,"3879":891,"4038":422,"3927":73,"3926":73,"3925":73,"3924":456,"3923":737,"4391":121,"4274":1092,"4468":45,"4273":1357,"4408":76,"4407":76,"3837":517,"4137":36,"4136":36,"4135":36,"4134":36,"3836":594,"3835":594,"4231":124,"4081":381,"4053":78,"4052":78,"4051":78,"4024":501,"4023":501,"4063":208,"4499":36,"4308":42,"4062":287,"4113":34,"4112":34,"4111":34,"4022":1036,"4249":445,"4021":1482,"4020":1482,"3834":4293,"4163":276,"4162":276,"4012":446,"4110":40,"4311":41,"4011":528,"4322":148,"4321":148,"4320":148,"3833":6536,"4367":175,"4364":137,"4415":117,"4490":107,"4324":40,"4226":463,"3870":626,"4267":81,"4266":81,"4265":81,"4264":189,"4263":189,"4445":79,"4444":79,"4443":79,"4262":307,"3869":1771,"4229":40,"3866":128,"4200":73,"4199":73,"3865":277,"4306":334,"3854":413,"4463":39,"4462":117,"4392":35,"4198":36,"4310":41,"4197":77,"4196":77,"3957":902,"4026":157,"4414":40,"4413":40,"4412":40,"4238":85,"4237":85,"4247":199,"4177":36,"4003":121,"4002":121,"4001":158,"4000":474,"3933":35,"3932":510,"4508":235,"4507":235,"3931":745,"3930":745,"3929":1333,"3928":1333,"4059":360,"4058":1402,"3907":1481,"3895":983,"3894":4215,"3893":4617,"4290":35,"4281":229,"4437":184,"4280":414,"4479":114,"4478":114,"4477":114,"4476":114,"4279":528,"4142":567,"3947":109,"4464":607,"3997":485,"3996":485,"3995":1093,"3994":1093,"3892":6424,"3891":6424,"3890":7797,"4506":46,"3910":271,"3909":271,"3908":308,"4326":749,"4426":203,"4255":164,"4254":209,"4253":209,"4070":38,"4439":76,"4069":115,"4068":115,"4067":115,"4066":115,"4065":115,"3968":559,"4133":147,"4275":117,"4431":207,"4015":197,"4014":451,"3860":683,"4027":73,"4271":80,"4143":39,"4092":77,"4298":73,"4450":42,"4449":42,"4448":42,"4297":115,"4091":590,"4045":128,"4044":1791,"4361":382,"3868":2347,"3946":114,"4483":41,"4482":41,"3887":184,"3886":184,"3867":3360,"3859":4192,"4453":137,"4452":137,"4451":137,"3858":15911,"3918":257,"3999":217,"4212":215,"4132":115,"4131":115,"4130":156,"4372":110,"4380":41,"4379":41,"4354":39,"4353":39,"4105":491,"4317":166,"4316":396,"4315":396,"4179":118,"4178":118,"4362":412,"3939":485,"3938":1065,"3937":1065,"3936":1184,"3935":1618,"3916":191,"3986":700,"3987":421,"4284":40,"4285":69,"4109":197,"4108":197,"3915":1681,"4211":74,"4487":38,"4215":116,"4214":116,"4331":78,"4126":362,"4125":362,"4124":558,"4123":558,"4363":45,"3906":105,"3905":105,"4155":598,"4154":598,"3904":704,"3903":750,"4346":180,"4345":180,"4344":180,"4343":696,"4342":696,"4341":696,"3902":5668,"4486":39,"4382":39,"4330":182,"4329":182,"4328":391,"4117":354,"4386":258,"4385":258,"4116":612,"4115":849,"4114":849,"4148":76,"4418":512,"4147":589,"4146":589,"4074":78,"4073":78,"4072":78,"3959":667,"3958":1517,"3990":36,"3989":36,"3988":36,"3853":27288,"4394":150,"4393":150,"3832":34511,"4368":214,"4050":366,"3831":35052,"3830":35052,"3829":35052,"4460":64,"4459":64,"4387":147,"4185":457,"4184":457,"4183":457,"4182":604,"4181":604,"4180":604,"4161":37,"4160":37,"4159":37,"4350":36,"4349":36,"4348":36,"4158":73,"4157":73,"4156":73,"3814":62748,"3813":62748,"3812":62748,"3811":62748,"3810":62748,"3809":62748,"3808":62748,"3807":62748,"3806":62748,"3805":62748,"3789":62748,"3788":62748,"3782":62748}}],"stacks":{"1579":{"b":0,"f":"[mongo 2.6.7]"},"1580":{"b":1579,"f":"[waitcpu]"},"1581":{"b":1579,"f":"No Stack"},"1582":{"b":1579,"f":"sys:set_robust_list"},"1583":{"b":1579,"f":"sys:recvfrom"},"1584":{"b":1579,"f":"No stack"},"1585":{"b":1581,"f":"[waitblocked]"},"1586":{"b":1579,"f":"sys:sendto"},"1587":{"b":1579,"f":"sys:rt_sigprocmask"},"1588":{"b":1579,"f":"sys:gettid"},"1589":{"b":1579,"f":"sys:futex"},"1590":{"b":1579,"f":"[interrupted]"},"1591":{"b":1583,"f":"[network]"},"1592":{"b":1589,"f":"[waitblocked]"},"1593":{"b":1579,"f":"start_thread"},"1594":{"b":1593,"f":"mongo::PortMessageServer::handleIncomingMsg(void*)"},"1595":{"b":1594,"f":"mongo::MyMessageHandler::process(mongo::Message&, mongo::AbstractMessagingPort*, mongo::LastError*)"},"1596":{"b":1595,"f":"mongo::assembleResponse(mongo::Message&, mongo::DbResponse&, mongo::HostAndPort const&)"},"1597":{"b":1596,"f":"mongo::newRunQuery(mongo::Message&, mongo::QueryMessage&, mongo::CurOp&, mongo::Message&)"},"1598":{"b":1597,"f":"mongo::_runCommands(char const*, mongo::BSONObj&, mongo::_BufBuilder<mongo::TrivialAllocator>&, mongo::BSONObjBuilder&, bool, int)"},"1599":{"b":1598,"f":"mongo::Command::execCommand(mongo::Command*, mongo::Client&, int, char const*, mongo::BSONObj&, mongo::BSONObjBuilder&, bool)"},"1600":{"b":1599,"f":"mongo::_execCommand(mongo::Command*, std::string const&, mongo::BSONObj&, int, std::string&, mongo::BSONObjBuilder&, bool)"},"1601":{"b":1600,"f":"mongo::WriteCmd::run(std::string const&, mongo::BSONObj&, int, std::string&, mongo::BSONObjBuilder&, bool)"},"1602":{"b":1601,"f":"mongo::WriteBatchExecutor::executeBatch(mongo::BatchedCommandRequest const&, mongo::BatchedCommandResponse*)"},"1603":{"b":1602,"f":"mongo::WriteBatchExecutor::bulkExecute(mongo::BatchedCommandRequest const&, std::vector<mongo::BatchedUpsertDetail*, std::allocator<mongo::BatchedUpsertDetail*> >*, std::vector<mongo::WriteErrorDetail*, std::allocator<mongo::WriteErrorDetail*> >*)"},"1604":{"b":1603,"f":"mongo::WriteBatchExecutor::execUpdate(mongo::BatchItemRef const&, mongo::BSONObj*, mongo::WriteErrorDetail**)"},"1605":{"b":1604,"f":"mongo::multiUpdate(mongo::BatchItemRef const&, mongo::(anonymous namespace)::WriteOpResult*) [clone .constprop.373]"},"1606":{"b":1605,"f":"mongo::Lock::DBWrite::DBWrite(mongo::StringData const&)"},"1607":{"b":1606,"f":"mongo::Lock::DBWrite::lockDB(std::string const&)"},"1608":{"b":1607,"f":"mongo::Lock::DBWrite::lockOther(mongo::StringData const&)"},"1609":{"b":1608,"f":"mongo::SimpleRWLock::lock()"},"1610":{"b":1609,"f":"pthread_cond_wait@@GLIBC_2.3.2"},"1611":{"b":1610,"f":"sys:futex"},"1612":{"b":1611,"f":"[waitblocked]"},"1613":{"b":1579,"f":"sys:msync"},"1614":{"b":1579,"f":"sys:unknown"},"1615":{"b":1595,"f":"mongo::Socket::send(char const*, int, char const*)"},"1616":{"b":1615,"f":"mongo::Socket::_send(char const*, int, char const*)"},"1617":{"b":1616,"f":"send"},"1618":{"b":1579,"f":"std::_Rb_tree<mongo::IndexDescriptor*, std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*>, std::_Select1st<std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*> >, std::less<mongo::IndexDescriptor*>, std::allocator<std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*> > >::_M_get_insert_unique_pos(mongo::IndexDescriptor* const&)"},"1619":{"b":1579,"f":"empty"},"1620":{"b":1579,"f":"sys:rt_sigpending"},"1621":{"b":1579,"f":"sys:write"},"1624":{"b":1602,"f":"mongo::NamespaceString::NamespaceString(mongo::StringData const&)"},"1625":{"b":1624,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"1626":{"b":1625,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"1627":{"b":1626,"f":"envz_strip"},"1628":{"b":1605,"f":"mongo::UpdateExecutor::execute()"},"1629":{"b":1628,"f":"mongo::update(mongo::UpdateRequest const&, mongo::OpDebug*, mongo::UpdateDriver*, mongo::CanonicalQuery*)"},"1630":{"b":1629,"f":"mongo::Collection::updateDocument(mongo::DiskLoc const&, mongo::BSONObj const&, bool, mongo::OpDebug*)"},"1631":{"b":1630,"f":"mongo::BtreeBasedAccessMethod::validateUpdate(mongo::BSONObj const&, mongo::BSONObj const&, mongo::DiskLoc const&, mongo::InsertDeleteOptions const&, mongo::UpdateTicket*)"},"1632":{"b":1631,"f":"mongo::BtreeKeyGenerator::getKeys(mongo::BSONObj const&, std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >*) const"},"1633":{"b":1632,"f":"mongo::BtreeKeyGeneratorV1::getKeysImpl(std::vector<char const*, std::allocator<char const*> >, std::vector<mongo::BSONElement, std::allocator<mongo::BSONElement> >, mongo::BSONObj const&, std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >*) const"},"1634":{"b":1633,"f":"mongo::BtreeKeyGeneratorV1::getKeysImplWithArray(std::vector<char const*, std::allocator<char const*> >, std::vector<mongo::BSONElement, std::allocator<mongo::BSONElement> >, mongo::BSONObj const&, std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >*, unsigned int, mongo::BSONObj const&) const"},"1635":{"b":1634,"f":"mongo::BtreeKeyGeneratorV1::extractNextElement(mongo::BSONObj const&, mongo::BSONObj const&, char const*&, bool&) const"},"1636":{"b":1635,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)"},"1637":{"b":1597,"f":"mongo::BSONObjBuilder::BSONObjBuilder(int)"},"1638":{"b":1637,"f":"malloc"},"1639":{"b":1599,"f":"mongo::LiteParsedQuery::parseMaxTimeMSCommand(mongo::BSONObj const&)"},"1640":{"b":1629,"f":"mongo::IDHackRunner::getNext(mongo::BSONObj*, mongo::DiskLoc*)"},"1641":{"b":1607,"f":"mongo::Lock::DBWrite::lockTop(mongo::LockState&)"},"1642":{"b":1641,"f":"void boost::condition_variable_any::wait<boost::mutex>(boost::mutex&)"},"1643":{"b":1642,"f":"pthread_cond_wait@@GLIBC_2.3.2"},"1644":{"b":1643,"f":"sys:futex"},"1645":{"b":1644,"f":"[waitblocked]"},"1646":{"b":1629,"f":"mongo::dur::DurableImpl::commitIfNeeded(bool)"},"1647":{"b":1646,"f":"mongo::dur::ThreadLocalIntents::unspool()"},"1648":{"b":1647,"f":"__pthread_mutex_lock"},"1649":{"b":1648,"f":"_L_lock_909"},"1650":{"b":1649,"f":"__lll_lock_wait"},"1651":{"b":1650,"f":"sys:futex"},"1652":{"b":1651,"f":"[waitblocked]"},"1653":{"b":1629,"f":"mongo::getRunner(mongo::Collection*, std::string const&, mongo::BSONObj const&, mongo::Runner**, mongo::CanonicalQuery**, unsigned long)"},"1654":{"b":1653,"f":"operator new(unsigned long)"},"1655":{"b":1609,"f":"pthread_mutex_unlock"},"1656":{"b":1655,"f":"_L_unlock_722"},"1657":{"b":1656,"f":"__lll_unlock_wake"},"1658":{"b":1635,"f":"mongo::BSONObj::getFieldDottedOrArray(char const*&) const"},"1659":{"b":1658,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"1660":{"b":1659,"f":"mongo::BSONElement::size() const"},"1661":{"b":1660,"f":"strlen"},"1662":{"b":1605,"f":"tp_rcu_read_lock_bp"},"1663":{"b":1662,"f":"__tls_get_addr"},"1664":{"b":1594,"f":"mongo::MessagingPort::recv(mongo::Message&)"},"1665":{"b":1664,"f":"mongo::Socket::recv(char*, int)"},"1666":{"b":1665,"f":"mongo::Socket::unsafe_recv(char*, int)"},"1667":{"b":1666,"f":"mongo::Socket::_recv(char*, int)"},"1668":{"b":1667,"f":"recv"},"1669":{"b":1630,"f":"mongo::Collection::getExtentManager()"},"1670":{"b":1630,"f":"mongo::KeyPattern::isIdKeyPattern(mongo::BSONObj const&)"},"1671":{"b":1670,"f":"mongo::BSONElement::size() const"},"1672":{"b":1579,"f":"mongo::WriteBatchExecutor::incWriteStats(mongo::BatchItemRef const&, mongo::WriteOpStats const&, mongo::WriteErrorDetail const*, mongo::CurOp*)"},"1673":{"b":1672,"f":"__pthread_mutex_lock"},"1674":{"b":1605,"f":"mongo::Lock::DBWrite::~DBWrite()"},"1675":{"b":1674,"f":"mongo::Lock::DBWrite::unlockDB()"},"1676":{"b":1675,"f":"mongo::QLock::notifyWeUnlocked(char)"},"1677":{"b":1601,"f":"__nss_hosts_lookup"},"1678":{"b":1596,"f":"mongo::CurOp::reset(mongo::HostAndPort const&, int)"},"1679":{"b":1678,"f":"mongo::CurOp::reset()"},"1680":{"b":1599,"f":"mongo::Command::_checkAuthorization(mongo::Command*, mongo::ClientBasic*, std::string const&, mongo::BSONObj const&, bool)"},"1681":{"b":1680,"f":"mongo::mutablebson::Document::Document(mongo::BSONObj const&, mongo::mutablebson::Document::InPlaceMode)"},"1682":{"b":1598,"f":"mongo::Query::hasReadPreference(mongo::BSONObj const&)"},"1683":{"b":1602,"f":"mongo::Status::unref(mongo::Status::ErrorInfo*)"},"1684":{"b":1632,"f":"std::vector<char const*, std::allocator<char const*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const* const&)"},"1685":{"b":1684,"f":"operator new(unsigned long)"},"1686":{"b":1629,"f":"mongo::UpdateDriver::makeOplogEntryQuery(mongo::BSONObj const&, bool) const"},"1687":{"b":1686,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"1688":{"b":1668,"f":"sys:recvfrom"},"1689":{"b":1688,"f":"[network]"},"1690":{"b":1605,"f":"__event_probe__tracekit___stepBegin(void*, char const*)"},"1691":{"b":1690,"f":"lttng_event_reserve"},"1692":{"b":1691,"f":"lib_ring_buffer_reserve_slow"},"1693":{"b":1692,"f":"lib_ring_buffer_switch_old_end.isra.29"},"1694":{"b":1693,"f":"lib_ring_buffer_wakeup"},"1695":{"b":1694,"f":"pthread_sigmask"},"1696":{"b":1631,"f":"mongo::setDifference(std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> > const&, std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> > const&, std::vector<mongo::BSONObj*, std::allocator<mongo::BSONObj*> >*)"},"1697":{"b":1601,"f":"mongo::BatchedCommandRequest::BatchedCommandRequest(mongo::BatchedCommandRequest::BatchType)"},"1698":{"b":1604,"f":"mongo::WriteBatchExecutor::incWriteStats(mongo::BatchItemRef const&, mongo::WriteOpStats const&, mongo::WriteErrorDetail const*, mongo::CurOp*)"},"1699":{"b":1698,"f":"mongo::LastError::recordUpdate(bool, long long, mongo::BSONObj)"},"1700":{"b":1604,"f":"mongo::beginCurrentOp(mongo::Client*, mongo::BatchItemRef const&)"},"1701":{"b":1700,"f":"mongo::CurOp::reset(mongo::HostAndPort const&, int)"},"1702":{"b":1701,"f":"mongo::CurOp::reset()"},"1703":{"b":1702,"f":"mongo::CurOp::_reset()"},"1704":{"b":1703,"f":"mongo::KillCurrentOp::notifyAllWaiters()"},"1705":{"b":1704,"f":"__pthread_mutex_lock"},"1706":{"b":1682,"f":"mongo::Query::isComplex(mongo::BSONObj const&, bool*)"},"1707":{"b":1706,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"1708":{"b":1707,"f":"strlen"},"1709":{"b":1602,"f":"mongo::BatchedCommandResponse::setNModified(long long)"},"1710":{"b":1629,"f":"mongo::UpdateDriver::update(mongo::StringData const&, mongo::mutablebson::Document*, mongo::BSONObj*, mongo::FieldRefSet*)"},"1711":{"b":1710,"f":"mongo::ModifierInc::log(mongo::LogBuilder*) const"},"1712":{"b":1605,"f":"__event_probe__tracekit___stepEnd(void*, char const*)"},"1713":{"b":1712,"f":"lttng_event_reserve"},"1714":{"b":1713,"f":"ctx_record.part.8"},"1715":{"b":1714,"f":"vtid_record"},"1716":{"b":1715,"f":"__tls_get_addr"},"1717":{"b":1691,"f":"ctx_get_size.part.7"},"1718":{"b":1605,"f":"mongo::Client::Context::Context(std::string const&, std::string const&, bool)"},"1719":{"b":1718,"f":"mongo::Client::Context::_finishInit()"},"1720":{"b":1719,"f":"mongo::DatabaseHolder::getOrCreate(std::string const&, std::string const&, bool&)"},"1721":{"b":1720,"f":"std::map<std::string, std::map<std::string, mongo::Database*, std::less<std::string>, std::allocator<std::pair<std::string const, mongo::Database*> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::map<std::string, mongo::Database*, std::less<std::string>, std::allocator<std::pair<std::string const, mongo::Database*> > > > > >::operator[](std::string const&)"},"1722":{"b":1721,"f":"std::string::compare(std::string const&) const"},"1723":{"b":1722,"f":"getc"},"1724":{"b":1634,"f":"std::_Rb_tree<mongo::BSONObj, mongo::BSONObj, std::_Identity<mongo::BSONObj>, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >::_M_insert_unique(mongo::BSONObj const&)"},"1725":{"b":1724,"f":"std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)"},"1726":{"b":1602,"f":"mongo::OwnedPointerVector<mongo::BatchedUpsertDetail>::~OwnedPointerVector()"},"1727":{"b":1601,"f":"_ZNKSt9exception4whatEv@@GLIBCXX_3.4"},"1728":{"b":1605,"f":"mongo::Client::Context::~Context()"},"1729":{"b":1728,"f":"mongo::CurOp::recordGlobalTime(long long) const"},"1730":{"b":1729,"f":"mongo::Top::record(mongo::StringData const&, int, int, long long, bool)"},"1731":{"b":1730,"f":"mongo::UnorderedFastKeyTable<mongo::StringData, std::string, mongo::Top::CollectionData, mongo::StringData::Hasher, mongo::StringMapDefaultEqual, mongo::StringMapDefaultConvertor, mongo::StringMapDefaultConvertorOther>::get(mongo::StringData const&)"},"1732":{"b":1630,"f":"_ZNKSt13bad_exception4whatEv@@GLIBCXX_3.4.9"},"1733":{"b":1596,"f":"_ZNKSt13bad_exception4whatEv@@GLIBCXX_3.4.9"},"1734":{"b":1595,"f":"mongo::DbResponse::~DbResponse()"},"1735":{"b":1734,"f":"__libc_free"},"1736":{"b":1596,"f":"envz_strip"},"1737":{"b":1710,"f":"mongo::FieldRefSet::insert(mongo::FieldRef const*, mongo::FieldRef const**)"},"1738":{"b":1617,"f":"sys:sendto"},"1739":{"b":1599,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"1740":{"b":1739,"f":"strlen"},"1741":{"b":1579,"f":"__nss_hosts_lookup"},"1742":{"b":1579,"f":"mongo::BatchedCommandResponse::~BatchedCommandResponse()"},"1743":{"b":1579,"f":"mongo::Record::likelyInPhysicalMemory(char const*)"},"1744":{"b":1743,"f":"mongo::mutablebson::Element::setValueSafeNum(mongo::SafeNum)"},"1745":{"b":1583,"f":"[waitblocked]"},"1746":{"b":1674,"f":"tc_delete"},"1747":{"b":1602,"f":"mongo::userAllowedWriteNS(mongo::NamespaceString const&)"},"1748":{"b":1747,"f":"mongo::userAllowedWriteNS(mongo::StringData const&, mongo::StringData const&)"},"1749":{"b":1748,"f":"mongo::StringData::compare(mongo::StringData const&) const"},"1750":{"b":1749,"f":"__nss_hosts_lookup"},"1751":{"b":1605,"f":"mongo::checkShardVersion(mongo::ShardingState*, mongo::BatchedCommandRequest const&, mongo::(anonymous namespace)::WriteOpResult*) [clone .constprop.374]"},"1752":{"b":1751,"f":"mongo::BatchedCommandRequest::getTargetingNS() const"},"1753":{"b":1629,"f":"mongo::logOp(char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, bool*, bool, mongo::BSONObj const*)"},"1754":{"b":1753,"f":"mongo::AuthorizationManager::logOp(char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, bool*)"},"1755":{"b":1754,"f":"mongo::StringData::compare(mongo::StringData const&) const"},"1756":{"b":1755,"f":"__nss_hosts_lookup"},"1757":{"b":1579,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)"},"1758":{"b":1753,"f":"mongo::logOpForDbHash(char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, mongo::BSONObj const*, bool)"},"1759":{"b":1758,"f":"mongo::DBHashCmd::wipeCacheForCollection(mongo::StringData const&)"},"1760":{"b":1759,"f":"mongo::DBHashCmd::isCachable(mongo::StringData const&) const"},"1761":{"b":1630,"f":"mongo::CollectionCursorCache::invalidateDocument(mongo::DiskLoc const&, mongo::InvalidationType)"},"1762":{"b":1601,"f":"mongo::BatchedCommandRequest::getNS() const"},"1763":{"b":1679,"f":"mongo::CurOp::_reset()"},"1764":{"b":1763,"f":"mongo::KillCurrentOp::notifyAllWaiters()"},"1765":{"b":1751,"f":"tc_delete"},"1766":{"b":1630,"f":"std::_Rb_tree<mongo::IndexDescriptor*, std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*>, std::_Select1st<std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*> >, std::less<mongo::IndexDescriptor*>, std::allocator<std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*> >, mongo::IndexDescriptor* const&)"},"1767":{"b":1766,"f":"std::_Rb_tree<mongo::IndexDescriptor*, std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*>, std::_Select1st<std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*> >, std::less<mongo::IndexDescriptor*>, std::allocator<std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*> > >::_M_get_insert_unique_pos(mongo::IndexDescriptor* const&)"},"1768":{"b":1710,"f":"void mongo::mutablebson::Document::Impl::writeChildren<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*) const"},"1769":{"b":1768,"f":"void mongo::mutablebson::Document::Impl::writeElement<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*, mongo::StringData const*) const [clone .constprop.165]"},"1770":{"b":1630,"f":"mongo::BtreeBasedAccessMethod::update(mongo::UpdateTicket const&, long*)"},"1771":{"b":1770,"f":"mongo::BtreeInterfaceImpl<mongo::BtreeData_V1>::bt_insert(mongo::IndexCatalogEntry*, mongo::DiskLoc, mongo::DiskLoc, mongo::BSONObj const&, bool, bool)"},"1772":{"b":1675,"f":"mongo::threadState()"},"1773":{"b":1629,"f":"mongo::mutablebson::Document::getObject() const"},"1774":{"b":1702,"f":"mongo::LockStat::reset()"},"1775":{"b":1710,"f":"mongo::UpdateIndexData::mightBeIndexed(mongo::StringData const&) const"},"1776":{"b":1699,"f":"mongo::BSONObj::valid() const"},"1777":{"b":1776,"f":"mongo::validateBSON(char const*, unsigned long)"},"1778":{"b":1777,"f":"operator new(unsigned long)"},"1779":{"b":1711,"f":"mongo::mutablebson::Document::makeElementSafeNum(mongo::StringData const&, mongo::SafeNum)"},"1780":{"b":1779,"f":"mongo::mutablebson::Document::makeElementDouble(mongo::StringData const&, double)"},"1781":{"b":1780,"f":"mongo::mutablebson::Document::Impl::insertLeafElement(int, int)"},"1782":{"b":1781,"f":"mongo::mutablebson::Document::Impl::makeNewRep(unsigned int*)"},"1783":{"b":1601,"f":"mongo::BatchedCommandResponse::toBSON() const"},"1784":{"b":1783,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)"},"1785":{"b":1617,"f":"__pthread_enable_asynccancel"},"1786":{"b":1680,"f":"mongo::CmdUpdate::redactForLogging(mongo::mutablebson::Document*)"},"1787":{"b":1609,"f":"__pthread_mutex_lock"},"1788":{"b":1787,"f":"_L_lock_909"},"1789":{"b":1788,"f":"__lll_lock_wait"},"1790":{"b":1789,"f":"sys:futex"},"1791":{"b":1790,"f":"[waitblocked]"},"1792":{"b":1629,"f":"mongo::(anonymous namespace)::validate(mongo::BSONObj const&, mongo::FieldRefSet const&, mongo::mutablebson::Document const&, std::vector<mongo::FieldRef*, std::allocator<mongo::FieldRef*> > const*, mongo::ModifierInterface::Options const&)"},"1793":{"b":1719,"f":"mongo::LockState::isLocked(mongo::StringData const&)"},"1794":{"b":1793,"f":"memchr"},"1795":{"b":1579,"f":"std::string::_Rep::_M_destroy(std::allocator<char> const&)"},"1796":{"b":1640,"f":"mongo::BtreeBasedAccessMethod::findSingle(mongo::BSONObj const&) const"},"1797":{"b":1796,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::findSingle(mongo::IndexCatalogEntry const*, mongo::DiskLoc const&, mongo::BSONObj const&) const"},"1798":{"b":1797,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::locate(mongo::IndexCatalogEntry const*, mongo::DiskLoc const&, mongo::BSONObj const&, int&, bool&, mongo::DiskLoc const&, int) const"},"1799":{"b":1798,"f":"mongo::KeyV1Owned::KeyV1Owned(mongo::BSONObj const&)"},"1800":{"b":1635,"f":"getc"},"1801":{"b":1710,"f":"mongo::BSONObjBuilder::obj()"},"1802":{"b":1771,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::asVersion(mongo::Record*)"},"1803":{"b":1802,"f":"mongo::Record::_accessing() const"},"1804":{"b":1803,"f":"mongo::Record::likelyInPhysicalMemory(char const*)"},"1805":{"b":1606,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"1806":{"b":1805,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"1807":{"b":1806,"f":"std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)"},"1808":{"b":1807,"f":"operator new(unsigned long)"},"1809":{"b":1596,"f":"mongo::QueryMessage::QueryMessage(mongo::DbMessage&)"},"1810":{"b":1809,"f":"mongo::DbMessage::nextJsObj()"},"1811":{"b":1810,"f":"mongo::validateBSON(char const*, unsigned long)"},"1812":{"b":1811,"f":"mongo::Status::unref(mongo::Status::ErrorInfo*)"},"1813":{"b":1751,"f":"mongo::BatchedCommandRequest::isMetadataSet() const"},"1814":{"b":1813,"f":"mongo::BatchedCommandRequest::getBatchType() const"},"1815":{"b":1579,"f":"Unknown Symbol"},"1816":{"b":1815,"f":"strlen"},"1817":{"b":1713,"f":"ctx_get_size.part.7"},"1818":{"b":1681,"f":"mongo::mutablebson::Document::Impl::Impl(mongo::mutablebson::Document::InPlaceMode)"},"1819":{"b":1818,"f":"operator new(unsigned long)"},"1820":{"b":1751,"f":"mongo::Lock::assertWriteLocked(mongo::StringData const&)"},"1821":{"b":1820,"f":"mongo::LockState::isLocked(mongo::StringData const&)"},"1822":{"b":1821,"f":"__nss_hosts_lookup"},"1823":{"b":1710,"f":"mongo::mutablebson::Document::reset()"},"1824":{"b":1823,"f":"mongo::mutablebson::Document::makeRootElement()"},"1825":{"b":1686,"f":"malloc"},"1826":{"b":1629,"f":"mongo::Database::getCollection(mongo::StringData const&)"},"1827":{"b":1826,"f":"__pthread_mutex_lock"},"1828":{"b":1670,"f":"mongo::BSONObjIterator::next()"},"1829":{"b":1675,"f":"mongo::LockState::unlockedOther()"},"1830":{"b":1629,"f":"mongo::mutablebson::Document::reset(mongo::BSONObj const&, mongo::mutablebson::Document::InPlaceMode)"},"1831":{"b":1798,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::locate(mongo::IndexCatalogEntry const*, mongo::DiskLoc const&, mongo::KeyV1 const&, int&, bool&, mongo::DiskLoc const&, int) const"},"1832":{"b":1831,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::find(mongo::IndexCatalogEntry const*, mongo::KeyV1 const&, mongo::DiskLoc const&, int&, bool) const"},"1833":{"b":1832,"f":"mongo::BucketBasics<mongo::BtreeData_V1>::keyNode(int) const"},"1834":{"b":1602,"f":"mongo::waitForWriteConcern(mongo::WriteConcernOptions const&, mongo::OpTime const&, mongo::WriteConcernResult*)"},"1835":{"b":1834,"f":"mongo::curTimeMicros64()"},"1836":{"b":1835,"f":"Unknown Symbol"},"1837":{"b":1792,"f":"mongo::FieldRefSet::findConflicts(mongo::FieldRef const*, mongo::FieldRefSet*) const"},"1838":{"b":1712,"f":"strlen"},"1839":{"b":1641,"f":"mongo::LockState::lockedStart(char)"},"1840":{"b":1604,"f":"mongo::CurOp::~CurOp()"},"1841":{"b":1840,"f":"mongo::KillCurrentOp::notifyAllWaiters()"},"1842":{"b":1841,"f":"boost::unique_lock<boost::mutex>::lock()"},"1843":{"b":1842,"f":"__pthread_mutex_lock"},"1844":{"b":1605,"f":"mongo::UpdateExecutor::UpdateExecutor(mongo::UpdateRequest const*, mongo::OpDebug*)"},"1845":{"b":1844,"f":"mongo::UpdateDriver::UpdateDriver(mongo::UpdateDriver::Options const&)"},"1846":{"b":1845,"f":"mongo::mutablebson::Document::Document()"},"1847":{"b":1846,"f":"mongo::mutablebson::Document::Impl::Impl(mongo::mutablebson::Document::InPlaceMode)"},"1848":{"b":1728,"f":"getc"},"1849":{"b":1579,"f":"__tls_get_addr"},"1850":{"b":1658,"f":"_ZNKSt9exception4whatEv@@GLIBCXX_3.4"},"1851":{"b":1604,"f":"__event_probe__tracekit___begin(void*, char const*)"},"1852":{"b":1851,"f":"lttng_event_reserve"},"1853":{"b":1675,"f":"mongo::Lock::ScopedLock::recordTime()"},"1854":{"b":1770,"f":"mongo::BtreeInterfaceImpl<mongo::BtreeData_V1>::unindex(mongo::IndexCatalogEntry*, mongo::DiskLoc, mongo::BSONObj const&, mongo::DiskLoc)"},"1855":{"b":1854,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::unindex(mongo::IndexCatalogEntry*, mongo::DiskLoc, mongo::BSONObj const&, mongo::DiskLoc) const"},"1856":{"b":1855,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::locate(mongo::IndexCatalogEntry const*, mongo::DiskLoc const&, mongo::BSONObj const&, int&, bool&, mongo::DiskLoc const&, int) const"},"1857":{"b":1856,"f":"mongo::KeyV1Owned::KeyV1Owned(mongo::BSONObj const&)"},"1858":{"b":1579,"f":"vpid_record"},"1859":{"b":1858,"f":"mongo::IDHackRunner::collection()"},"1860":{"b":1606,"f":"mongo::Lock::ScopedLock::ScopedLock(char)"},"1861":{"b":1860,"f":"mongo::Lock::ParallelBatchWriterSupport::ParallelBatchWriterSupport()"},"1862":{"b":1861,"f":"mongo::Lock::ParallelBatchWriterSupport::relock()"},"1863":{"b":1862,"f":"boost::unique_lock<boost::mutex>::lock()"},"1864":{"b":1863,"f":"__pthread_mutex_lock"},"1865":{"b":1679,"f":"mongo::OpDebug::reset()"},"1866":{"b":1599,"f":"mongo::KillCurrentOp::checkForInterrupt(bool)"},"1867":{"b":1866,"f":"mongo::CurOp::MaxTimeTracker::checkTimeLimit()"},"1868":{"b":1610,"f":"__lll_unlock_wake"},"1869":{"b":1599,"f":"mongo::Command::appendCommandStatus(mongo::BSONObjBuilder&, bool, std::string const&)"},"1870":{"b":1869,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"1871":{"b":1870,"f":"strlen"},"1872":{"b":1786,"f":"mongo::WriteCmd::redactTooLongLog(mongo::mutablebson::Document*, mongo::StringData const&)"},"1873":{"b":1872,"f":"mongo::mutablebson::Element::countChildren() const"},"1874":{"b":1602,"f":"mongo::CurOp::setMessage(char const*, std::string, unsigned long long, int)"},"1875":{"b":1579,"f":"std::string::_M_mutate(unsigned long, unsigned long, unsigned long)"},"1876":{"b":1681,"f":"mongo::mutablebson::Document::makeRootElement(mongo::BSONObj const&)"},"1877":{"b":1876,"f":"mongo::mutablebson::Document::Impl::makeNewRep(unsigned int*)"},"1878":{"b":1630,"f":"mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)"},"1879":{"b":1878,"f":"mongo::IndexCatalogEntryContainer::find(mongo::IndexDescriptor const*)"},"1880":{"b":1632,"f":"operator new(unsigned long)"},"1881":{"b":1713,"f":"rcu_read_lock_bp"},"1882":{"b":1599,"f":"mongo::CurOp::ensureStarted()"},"1883":{"b":1882,"f":"mongo::curTimeMicros64()"},"1884":{"b":1883,"f":"Unknown Symbol"},"1885":{"b":1691,"f":"ctx_record.part.8"},"1886":{"b":1885,"f":"lib_ring_buffer_write.constprop.28"},"1887":{"b":1579,"f":"_fini"},"1888":{"b":1887,"f":"_fini"},"1889":{"b":1888,"f":"Unknown Symbol"},"1890":{"b":1889,"f":"Unknown Symbol"},"1891":{"b":1890,"f":"Unknown Symbol"},"1892":{"b":1891,"f":"envz_strip"},"1893":{"b":1605,"f":"mongo::BatchedCommandRequest::getNS() const"},"1894":{"b":1653,"f":"mongo::CanonicalQuery::isSimpleIdQuery(mongo::BSONObj const&)"},"1895":{"b":1634,"f":"mongo::BSONObjBuilder::obj()"},"1896":{"b":1596,"f":"mongo::AuthorizationSession::startRequest()"},"1897":{"b":1896,"f":"mongo::AuthzSessionExternalStateServerCommon::_checkShouldAllowLocalhost()"},"1898":{"b":1897,"f":"mongo::AuthorizationManager::isAuthEnabled() const"},"1899":{"b":1707,"f":"__nss_hosts_lookup"},"1900":{"b":1680,"f":"mongo::Command::parseNs(std::string const&, mongo::BSONObj const&) const"},"1901":{"b":1900,"f":"std::string::append(unsigned long, char)"},"1902":{"b":1630,"f":"mongo::OwnedPointerMap<mongo::IndexDescriptor*, mongo::UpdateTicket, std::less<mongo::IndexDescriptor*> >::~OwnedPointerMap()"},"1903":{"b":1902,"f":"mongo::BtreeBasedAccessMethod::BtreeBasedPrivateUpdateData::~BtreeBasedPrivateUpdateData()"},"1904":{"b":1903,"f":"std::_Rb_tree<mongo::BSONObj, mongo::BSONObj, std::_Identity<mongo::BSONObj>, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >::_M_erase(std::_Rb_tree_node<mongo::BSONObj>*)"},"1905":{"b":1710,"f":"mongo::ModifierInc::prepare(mongo::mutablebson::Element, mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)"},"1906":{"b":1905,"f":"mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&, mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)"},"1907":{"b":1906,"f":"mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData const&) const"},"1908":{"b":1907,"f":"mongo::mutablebson::Document::Impl::resolveRightSibling(unsigned int)"},"1909":{"b":1908,"f":"mongo::BSONElement::size() const"},"1910":{"b":1771,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::bt_insert(mongo::IndexCatalogEntry*, mongo::DiskLoc, mongo::DiskLoc, mongo::BSONObj const&, bool, bool) const"},"1911":{"b":1910,"f":"mongo::KeyV1Owned::KeyV1Owned(mongo::BSONObj const&)"},"1912":{"b":1764,"f":"__pthread_mutex_lock"},"1913":{"b":1731,"f":"mongo::StringData::Hasher::operator()(mongo::StringData const&) const"},"1914":{"b":1913,"f":"MurmurHash3_x64_128(void const*, int, unsigned int, void*)"},"1915":{"b":1904,"f":"__libc_free"},"1916":{"b":1691,"f":"clock_gettime"},"1917":{"b":1630,"f":"mongo::SimpleMutex::unlock()"},"1918":{"b":1917,"f":"pthread_mutex_unlock"},"1919":{"b":1720,"f":"_ZNKSt9exception4whatEv@@GLIBCXX_3.4"},"1920":{"b":1714,"f":"lib_ring_buffer_write.constprop.28"},"1921":{"b":1601,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)"},"1922":{"b":1629,"f":"std::auto_ptr<mongo::CanonicalQuery>::~auto_ptr()"},"1923":{"b":1605,"f":"mongo::UpdateExecutor::prepare()"},"1924":{"b":1923,"f":"mongo::UpdateExecutor::parseUpdate()"},"1925":{"b":1924,"f":"mongo::UpdateDriver::parse(mongo::BSONObj const&, bool)"},"1926":{"b":1925,"f":"mongo::UpdateDriver::addAndParse(mongo::modifiertable::ModifierType, mongo::BSONElement const&)"},"1927":{"b":1926,"f":"mongo::Status::unref(mongo::Status::ErrorInfo*)"},"1928":{"b":1640,"f":"mongo::IDHackRunner::hasCoveredProjection() const"},"1929":{"b":1579,"f":"strlen"},"1930":{"b":1598,"f":"getc"},"1931":{"b":1852,"f":"ctx_record.part.8"},"1932":{"b":1931,"f":"vpid_record"},"1933":{"b":1635,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"1934":{"b":1719,"f":"mongo::CurOp::enter(mongo::Client::Context*)"},"1935":{"b":1934,"f":"mongo::CurOp::ensureStarted()"},"1936":{"b":1599,"f":"mongo::BSONElement::trueValue() const"},"1937":{"b":1629,"f":"mongo::UpdateLifecycleImpl::getImmutableFields() const"},"1938":{"b":1751,"f":"mongo::NamespaceString::NamespaceString(mongo::StringData const&)"},"1939":{"b":1938,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"1940":{"b":1939,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"1941":{"b":1602,"f":"mongo::WriteConcernResult::~WriteConcernResult()"},"1942":{"b":1754,"f":"_ZNKSt9exception4whatEv@@GLIBCXX_3.4"},"1943":{"b":1681,"f":"operator new(unsigned long)"},"1944":{"b":1696,"f":"std::vector<mongo::BSONObj*, std::allocator<mongo::BSONObj*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<mongo::BSONObj**, std::vector<mongo::BSONObj*, std::allocator<mongo::BSONObj*> > >, mongo::BSONObj* const&)"},"1945":{"b":1700,"f":"mongo::CurOp::CurOp(mongo::Client*, mongo::CurOp*)"},"1946":{"b":1945,"f":"mongo::CurOp::_reset()"},"1947":{"b":1764,"f":"pthread_mutex_unlock"},"1948":{"b":1629,"f":"std::tr1::_Hashtable<mongo::DiskLoc, mongo::DiskLoc, std::allocator<mongo::DiskLoc>, std::_Identity<mongo::DiskLoc>, std::equal_to<mongo::DiskLoc>, mongo::DiskLoc::Hasher, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, true, true>::_M_insert_bucket(mongo::DiskLoc const&, unsigned long, unsigned long)"},"1949":{"b":1675,"f":"mongo::Lock::ScopedLock::_recordTime(long long)"},"1950":{"b":1949,"f":"mongo::LockStat::recordLockTimeMicros(char, long long)"},"1951":{"b":1680,"f":"mongo::mutablebson::Document::~Document()"},"1952":{"b":1951,"f":"tc_delete"},"1953":{"b":1674,"f":"mongo::Lock::ScopedLock::~ScopedLock()"},"1954":{"b":1953,"f":"boost::unique_lock<boost::mutex>::lock()"},"1955":{"b":1954,"f":"__pthread_mutex_lock"},"1956":{"b":1601,"f":"mongo::BatchedUpdateRequest::parseBSON(mongo::BSONObj const&, std::string*)"},"1957":{"b":1956,"f":"mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool> const&, bool*, std::string*)"},"1958":{"b":1957,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"1959":{"b":1958,"f":"__nss_hosts_lookup"},"1960":{"b":1916,"f":"Unknown Symbol"},"1961":{"b":1815,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::locate(mongo::IndexCatalogEntry const*, mongo::DiskLoc const&, mongo::KeyV1 const&, int&, bool&, mongo::DiskLoc const&, int) const"},"1962":{"b":1719,"f":"mongo::FileAllocator::hasFailed() const"},"1963":{"b":1956,"f":"mongo::FieldParser::FieldState mongo::FieldParser::extract<mongo::BatchedUpdateDocument>(mongo::BSONObj, mongo::BSONField<std::vector<mongo::BatchedUpdateDocument*, std::allocator<mongo::BatchedUpdateDocument*> > > const&, std::vector<mongo::BatchedUpdateDocument*, std::allocator<mongo::BatchedUpdateDocument*> >*, std::string*)"},"1964":{"b":1696,"f":"mongo::BSONObj::equal(mongo::BSONObj const&) const"},"1965":{"b":1720,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)"},"1966":{"b":1965,"f":"char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)"},"1967":{"b":1966,"f":"std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)"},"1968":{"b":1967,"f":"operator new(unsigned long)"},"1969":{"b":1579,"f":"std::string::assign(std::string const&)"},"1970":{"b":1682,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"1971":{"b":1970,"f":"strlen"},"1972":{"b":1900,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)"},"1973":{"b":1972,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"1974":{"b":1775,"f":"mongo::UpdateIndexData::_startsWith(mongo::StringData const&, mongo::StringData const&) const"},"1975":{"b":1629,"f":"_obstack_memory_used"},"1976":{"b":1579,"f":"malloc"},"1977":{"b":1815,"f":"mongo::DbMessage::pullInt()"},"1978":{"b":1579,"f":"getc"},"1979":{"b":1712,"f":"lttng_event_commit"},"1980":{"b":1832,"f":"mongo::DiskLoc56Bit::operator=(mongo::DiskLoc const&)"},"1981":{"b":1910,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::_insert(mongo::IndexCatalogEntry*, mongo::DiskLoc, mongo::DiskLoc, mongo::KeyV1 const&, bool, mongo::DiskLoc, mongo::DiskLoc) const"},"1982":{"b":1981,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::insertHere(mongo::IndexCatalogEntry*, mongo::DiskLoc, int, mongo::DiskLoc, mongo::KeyV1 const&, mongo::DiskLoc, mongo::DiskLoc) const"},"1983":{"b":1982,"f":"mongo::BucketBasics<mongo::BtreeData_V1>::basicInsert(mongo::DiskLoc, int&, mongo::DiskLoc, mongo::KeyV1 const&, mongo::Ordering const&) const"},"1984":{"b":1983,"f":"mongo::dur::DurableImpl::writingAtOffset(void*, unsigned int, unsigned int)"},"1985":{"b":1717,"f":"vpid_get_size"},"1986":{"b":1718,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)"},"1987":{"b":1986,"f":"std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long)"},"1988":{"b":1987,"f":"std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)"},"1989":{"b":1988,"f":"operator new(unsigned long)"},"1990":{"b":1862,"f":"boost::detail::get_tss_data(void const*)"},"1991":{"b":1990,"f":"boost::detail::find_tss_data(void const*)"},"1992":{"b":1991,"f":"boost::detail::get_current_thread_data()"},"1993":{"b":1992,"f":"void boost::call_once<void (*)()>(boost::once_flag&, void (*)()) [clone .constprop.52]"},"1994":{"b":1601,"f":"mongo::LastErrorHolder::get(bool)"},"1995":{"b":1994,"f":"mongo::LastErrorHolder::_get(bool)"},"1996":{"b":1995,"f":"boost::detail::get_tss_data(void const*)"},"1997":{"b":1996,"f":"boost::detail::find_tss_data(void const*)"},"1998":{"b":1597,"f":"mongo::_BufBuilder<mongo::TrivialAllocator>::_BufBuilder(int) [clone .constprop.236]"},"1999":{"b":1998,"f":"malloc"},"2000":{"b":1676,"f":"__pthread_mutex_lock"},"2001":{"b":1579,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"2002":{"b":1711,"f":"mongo::LogBuilder::addToSets(mongo::mutablebson::Element)"},"2003":{"b":2002,"f":"mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)"},"2004":{"b":2003,"f":"mongo::mutablebson::Element::addChild(mongo::mutablebson::Element, bool)"},"2005":{"b":1579,"f":"envz_strip"},"2006":{"b":1963,"f":"mongo::BatchedUpdateDocument::parseBSON(mongo::BSONObj const&, std::string*)"},"2007":{"b":2006,"f":"mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj> const&, mongo::BSONObj*, std::string*)"},"2008":{"b":2007,"f":"mongo::FieldParser::extract(mongo::BSONElement, mongo::BSONField<mongo::BSONObj> const&, mongo::BSONObj*, std::string*)"},"2009":{"b":1926,"f":"mongo::ModifierInc::init(mongo::BSONElement const&, mongo::ModifierInterface::Options const&, bool*)"},"2010":{"b":2009,"f":"mongo::FieldRef::parse(mongo::StringData const&)"},"2011":{"b":2010,"f":"_ZNKSt9exception4whatEv@@GLIBCXX_3.4"},"2012":{"b":1604,"f":"tp_rcu_read_lock_bp"},"2013":{"b":2012,"f":"__tls_get_addr"},"2014":{"b":1595,"f":"mongo::MessagingPort::remote() const"},"2015":{"b":1900,"f":"getc"},"2016":{"b":1714,"f":"vpid_record"},"2017":{"b":2016,"f":"lib_ring_buffer_write.constprop.28"},"2018":{"b":1826,"f":"mongo::StringData::compare(mongo::StringData const&) const"},"2019":{"b":2018,"f":"__nss_hosts_lookup"},"2020":{"b":1601,"f":"mongo::BatchedCommandRequest::parseBSON(mongo::BSONObj const&, std::string*)"},"2021":{"b":1599,"f":"_ZNKSt13bad_exception4whatEv@@GLIBCXX_3.4.9"},"2022":{"b":1933,"f":"mongo::BSONElement::size() const"},"2023":{"b":1696,"f":"mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj const&, bool) const"},"2024":{"b":2023,"f":"mongo::BSONObjIterator::next()"},"2025":{"b":1678,"f":"__nss_hosts_lookup"},"2026":{"b":1769,"f":"void mongo::mutablebson::Document::Impl::writeChildren<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*) const [clone .constprop.166]"},"2027":{"b":2026,"f":"void mongo::mutablebson::Document::Impl::writeElement<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*, mongo::StringData const*) const [clone .constprop.165]"},"2028":{"b":2027,"f":"mongo::BSONObjBuilder::append(mongo::BSONElement const&)"},"2029":{"b":2028,"f":"mongo::BSONElement::size() const"},"2030":{"b":1630,"f":"mongo::IndexCatalog::IndexIterator::more()"},"2031":{"b":1945,"f":"operator new[](unsigned long)"},"2032":{"b":1629,"f":"void boost::checked_delete<std::tr1::unordered_set<mongo::DiskLoc, mongo::DiskLoc::Hasher, std::equal_to<mongo::DiskLoc>, std::allocator<mongo::DiskLoc> > >(std::tr1::unordered_set<mongo::DiskLoc, mongo::DiskLoc::Hasher, std::equal_to<mongo::DiskLoc>, std::allocator<mongo::DiskLoc> >*)"},"2033":{"b":2032,"f":"tc_delete"},"2034":{"b":1956,"f":"mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string> const&, std::string*, std::string*)"},"2035":{"b":2034,"f":"mongo::FieldParser::extract(mongo::BSONElement, mongo::BSONField<std::string> const&, std::string*, std::string*)"},"2036":{"b":2035,"f":"std::string::assign(std::string const&)"},"2037":{"b":1938,"f":"getc"},"2038":{"b":1997,"f":"boost::detail::get_current_thread_data()"},"2039":{"b":2038,"f":"void boost::call_once<void (*)()>(boost::once_flag&, void (*)()) [clone .constprop.52]"},"2040":{"b":2039,"f":"boost::detail::get_once_per_thread_epoch()"},"2041":{"b":2040,"f":"pthread_getspecific"},"2042":{"b":1910,"f":"mongo::KeyV1::dataSize() const"},"2043":{"b":1887,"f":"mongo::UpdateExecutor::prepare()"},"2044":{"b":1629,"f":"mongo::CollectionCursorCache::deregisterRunner(mongo::Runner*)"},"2045":{"b":1737,"f":"mongo::FieldRef::FieldRef(mongo::StringData const&)"},"2046":{"b":2045,"f":"mongo::FieldRef::parse(mongo::StringData const&)"},"2047":{"b":2046,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"2048":{"b":2047,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"2049":{"b":2048,"f":"std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)"},"2050":{"b":2049,"f":"operator new(unsigned long)"},"2051":{"b":1724,"f":"operator new(unsigned long)"},"2052":{"b":1945,"f":"mongo::SpinLock::SpinLock()"},"2053":{"b":1811,"f":"operator new(unsigned long)"},"2054":{"b":1635,"f":"tc_delete"},"2055":{"b":1605,"f":"mongo::UpdateExecutor::~UpdateExecutor()"},"2056":{"b":2055,"f":"mongo::UpdateDriver::~UpdateDriver()"},"2057":{"b":2056,"f":"mongo::mutablebson::Document::~Document()"},"2058":{"b":2057,"f":"std::string::_Rep::_M_dispose(std::allocator<char> const&)"},"2059":{"b":1579,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"2060":{"b":1596,"f":"mongo::NamespaceString::NamespaceString(mongo::StringData const&)"},"2061":{"b":2060,"f":"strlen"},"2062":{"b":1579,"f":"mongo::CurOp::ensureStarted()"},"2063":{"b":1847,"f":"mongo::BSONObjBuilder::BSONObjBuilder(mongo::_BufBuilder<mongo::TrivialAllocator>&)"},"2064":{"b":1647,"f":"mongo::dur::ThreadLocalIntents::_unspool()"},"2065":{"b":2064,"f":"mongo::dur::CommitJob::note(void*, int)"},"2066":{"b":1632,"f":"tc_delete"},"2067":{"b":1958,"f":"mongo::BSONElement::size() const"},"2068":{"b":1596,"f":"operator new(unsigned long)"},"2069":{"b":1887,"f":"Unknown Symbol"},"2070":{"b":2069,"f":"strlen"},"2071":{"b":1579,"f":"mongo::compareElementValues(mongo::BSONElement const&, mongo::BSONElement const&)"},"2072":{"b":1597,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"2073":{"b":2072,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"2074":{"b":1609,"f":"_ZNKSt9exception4whatEv@@GLIBCXX_3.4"},"2075":{"b":1796,"f":"mongo::ExtentManager::recordFor(mongo::DiskLoc const&) const"},"2076":{"b":2075,"f":"mongo::ExtentManager::_getOpenFile(int) const"},"2077":{"b":1866,"f":"mongo::ScopedFailPoint::ScopedFailPoint(mongo::FailPoint*)"},"2078":{"b":1981,"f":"mongo::KeyV1::dataSize() const"},"2079":{"b":1773,"f":"void mongo::mutablebson::Document::Impl::writeChildren<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*) const"},"2080":{"b":2079,"f":"void mongo::mutablebson::Document::Impl::writeElement<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*, mongo::StringData const*) const [clone .constprop.165]"},"2081":{"b":2080,"f":"mongo::BSONObjBuilder::append(mongo::BSONElement const&)"},"2082":{"b":1713,"f":"clock_gettime"},"2083":{"b":2082,"f":"Unknown Symbol"},"2084":{"b":1640,"f":"mongo::DiskLoc::obj() const"},"2085":{"b":2084,"f":"mongo::Record::accessed()"},"2086":{"b":1601,"f":"mongo::BatchedUpdateRequest::setCollName(mongo::StringData const&)"},"2087":{"b":1579,"f":"mongo::intrusive_ptr_release(mongo::BSONObj::Holder*)"},"2088":{"b":1821,"f":"std::string::compare(char const*) const"},"2089":{"b":2088,"f":"__nss_hosts_lookup"},"2090":{"b":1796,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::asVersion(mongo::Record*)"},"2091":{"b":2090,"f":"mongo::Record::_accessing() const"},"2092":{"b":2091,"f":"mongo::Record::likelyInPhysicalMemory() const"},"2093":{"b":1630,"f":"mongo::compareElementValues(mongo::BSONElement const&, mongo::BSONElement const&)"},"2094":{"b":1629,"f":"__libc_free"},"2095":{"b":2023,"f":"mongo::BSONElement::woCompare(mongo::BSONElement const&, bool) const"},"2096":{"b":1963,"f":"std::vector<mongo::BatchedUpdateDocument*, std::allocator<mongo::BatchedUpdateDocument*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<mongo::BatchedUpdateDocument**, std::vector<mongo::BatchedUpdateDocument*, std::allocator<mongo::BatchedUpdateDocument*> > >, mongo::BatchedUpdateDocument* const&)"},"2097":{"b":1870,"f":"__nss_hosts_lookup"},"2098":{"b":1607,"f":"mongo::Acquiring::Acquiring(mongo::Lock::ScopedLock*, mongo::LockState&)"},"2099":{"b":1983,"f":"mongo::KeyV1::dataSize() const"},"2100":{"b":2060,"f":"std::string::find(char, unsigned long) const"},"2101":{"b":2100,"f":"memchr"},"2102":{"b":2007,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"2103":{"b":2102,"f":"__nss_hosts_lookup"},"2104":{"b":1841,"f":"__pthread_mutex_lock"},"2105":{"b":1579,"f":"mongo::dur::DurableImpl::declareWriteIntent(void*, unsigned int)"},"2106":{"b":2002,"f":"mongo::mutablebson::Document::makeElementObject(mongo::StringData const&)"},"2107":{"b":1712,"f":"rcu_read_unlock_bp"},"2108":{"b":2046,"f":"std::string::assign(std::string const&)"},"2109":{"b":1690,"f":"rcu_read_unlock_bp"},"2110":{"b":1674,"f":"getc"},"2111":{"b":1970,"f":"mongo::BSONElement::size() const"},"2112":{"b":1630,"f":"std::map<mongo::IndexDescriptor*, mongo::UpdateTicket*, std::less<mongo::IndexDescriptor*>, std::allocator<std::pair<mongo::IndexDescriptor* const, mongo::UpdateTicket*> > >::operator[](mongo::IndexDescriptor* const&)"},"2113":{"b":1806,"f":"envz_strip"},"2114":{"b":1597,"f":"memchr"},"2115":{"b":1737,"f":"tc_delete"},"2116":{"b":1889,"f":"mongo::UpdateDriver::parse(mongo::BSONObj const&, bool)"},"2117":{"b":1704,"f":"pthread_mutex_unlock"},"2118":{"b":2117,"f":"_L_unlock_722"},"2119":{"b":2118,"f":"__lll_unlock_wake"},"2120":{"b":1932,"f":"__getpid"},"2121":{"b":1679,"f":"mongo::LockStat::reset()"},"2122":{"b":1953,"f":"boost::detail::get_tss_data(void const*)"},"2123":{"b":2122,"f":"boost::detail::find_tss_data(void const*)"},"2124":{"b":2123,"f":"boost::detail::get_current_thread_data()"},"2125":{"b":2124,"f":"void boost::call_once<void (*)()>(boost::once_flag&, void (*)()) [clone .constprop.52]"},"2126":{"b":2125,"f":"boost::detail::get_once_per_thread_epoch()"},"2127":{"b":2126,"f":"__pthread_once"},"2128":{"b":1811,"f":"memchr"},"2129":{"b":2035,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"2130":{"b":2129,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"2131":{"b":2130,"f":"envz_strip"},"2132":{"b":1981,"f":"mongo::BtreeBucket<mongo::BtreeData_V1>::find(mongo::IndexCatalogEntry const*, mongo::KeyV1 const&, mongo::DiskLoc const&, int&, bool) const"},"2133":{"b":1579,"f":"operator new(unsigned long)"},"2134":{"b":1837,"f":"mongo::FieldRef::FieldRef(mongo::StringData const&)"},"2135":{"b":2134,"f":"mongo::FieldRef::parse(mongo::StringData const&)"},"2136":{"b":2135,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"2137":{"b":1609,"f":"boost::this_thread::interruption_point()"},"2138":{"b":2137,"f":"_ZNKSt13bad_exception4whatEv@@GLIBCXX_3.4.9"},"2139":{"b":2132,"f":"mongo::BucketBasics<mongo::BtreeData_V1>::keyNode(int) const"},"2140":{"b":1906,"f":"mongo::mutablebson::Element::getType() const"},"2141":{"b":1710,"f":"mongo::ModifierInc::apply() const"},"2142":{"b":2141,"f":"mongo::mutablebson::Element::setValueSafeNum(mongo::SafeNum)"},"2143":{"b":2142,"f":"mongo::mutablebson::Element::setValueDouble(double)"},"2144":{"b":2143,"f":"mongo::mutablebson::Element::setValue(unsigned int)"},"2145":{"b":2144,"f":"mongo::mutablebson::Document::Impl::getType(mongo::mutablebson::(anonymous namespace)::ElementRep const&) const"},"2146":{"b":1872,"f":"mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData const&) const"},"2147":{"b":2146,"f":"__nss_hosts_lookup"},"2148":{"b":1579,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)"},"2149":{"b":1754,"f":"memchr"},"2150":{"b":1630,"f":"mongo::CollectionInfoCache::notifyOfWriteOp()"},"2151":{"b":1604,"f":"__event_probe__tracekit___end(void*)"},"2152":{"b":2151,"f":"lttng_event_commit"},"2153":{"b":1631,"f":"std::_Rb_tree<mongo::BSONObj, mongo::BSONObj, std::_Identity<mongo::BSONObj>, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >::_Rb_tree_impl<mongo::BSONObjCmp, false>::_Rb_tree_impl()"},"2154":{"b":1755,"f":"strlen"},"2155":{"b":1851,"f":"lttng_event_commit"},"2156":{"b":1629,"f":"mongo::IDHackRunner::~IDHackRunner()"},"2157":{"b":2156,"f":"mongo::IDHackRunner::~IDHackRunner()"},"2158":{"b":2157,"f":"__libc_free"},"2159":{"b":1629,"f":"mongo::LiteParsedQuery::isQueryIsolated(mongo::BSONObj const&)"},"2160":{"b":2159,"f":"mongo::BSONElement::size() const"},"2161":{"b":2160,"f":"strlen"},"2162":{"b":1636,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"2163":{"b":2162,"f":"std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)"},"2164":{"b":1817,"f":"vtid_get_size"},"2165":{"b":1792,"f":"mongo::(anonymous namespace)::storageValid(mongo::mutablebson::ConstElement const&, bool)"},"2166":{"b":2165,"f":"__nss_hosts_lookup"},"2167":{"b":2146,"f":"mongo::mutablebson::Document::Impl::resolveRightSibling(unsigned int)"},"2168":{"b":2167,"f":"mongo::BSONElement::size() const"},"2169":{"b":1595,"f":"mongo::LastErrorHolder::startRequest(mongo::Message&, mongo::LastError*)"},"2170":{"b":2126,"f":"pthread_getspecific"},"2171":{"b":1633,"f":"tc_delete"},"2172":{"b":1932,"f":"lib_ring_buffer_write.constprop.28"},"2173":{"b":1605,"f":"mongo::intrusive_ptr_release(mongo::BSONObj::Holder*)"},"2174":{"b":1602,"f":"mongo::validateWriteConcern(mongo::WriteConcernOptions const&)"},"2175":{"b":1601,"f":"mongo::BatchedCommandRequest::~BatchedCommandRequest()"},"2176":{"b":2175,"f":"mongo::BatchedUpdateRequest::~BatchedUpdateRequest()"},"2177":{"b":1938,"f":"std::string::find(char, unsigned long) const"},"2178":{"b":1664,"f":"malloc"},"2179":{"b":2024,"f":"mongo::BSONElement::size() const"},"2180":{"b":1896,"f":"mongo::AuthzSessionExternalStateMongod::startRequest()"},"2181":{"b":2151,"f":"lttng_event_reserve"},"2182":{"b":2181,"f":"rcu_read_lock_bp"},"2183":{"b":1579,"f":"mongo::(anonymous namespace)::ensureIdAndFirst(mongo::mutablebson::Document&)"},"2184":{"b":1579,"f":"mongo::NamespaceString::NamespaceString(mongo::StringData const&)"},"2185":{"b":1926,"f":"std::vector<mongo::ModifierInterface*, std::allocator<mongo::ModifierInterface*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<mongo::ModifierInterface**, std::vector<mongo::ModifierInterface*, std::allocator<mongo::ModifierInterface*> > >, mongo::ModifierInterface* const&)"},"2186":{"b":1596,"f":"mongo::curTimeMicros64()"},"2187":{"b":2143,"f":"mongo::mutablebson::Document::makeElementDouble(mongo::StringData const&, double)"},"2188":{"b":2187,"f":"mongo::BSONObjBuilder::append(mongo::StringData const&, double)"},"2189":{"b":2188,"f":"mongo::_BufBuilder<mongo::TrivialAllocator>::appendStr(mongo::StringData const&, bool) [clone .constprop.335]"},"2190":{"b":2189,"f":"envz_strip"},"2191":{"b":1754,"f":"mongo::AuthzManagerExternalStateLocal::logOp(char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, bool*)"},"2192":{"b":1953,"f":"tc_delete"},"2193":{"b":1874,"f":"strlen"},"2194":{"b":1607,"f":"mongo::nsToDatabaseSubstring(mongo::StringData const&)"},"2195":{"b":1697,"f":"mongo::BatchedUpdateRequest::BatchedUpdateRequest()"},"2196":{"b":2195,"f":"mongo::BatchedUpdateRequest::clear()"},"2197":{"b":1641,"f":"mongo::threadState()"},"2198":{"b":1579,"f":"mongo::FieldRef::compare(mongo::FieldRef const&) const"},"2199":{"b":1797,"f":"mongo::KeyV1Owned::KeyV1Owned(mongo::BSONObj const&)"},"2200":{"b":2199,"f":"mongo::BSONElement::size() const"},"2201":{"b":1846,"f":"mongo::mutablebson::Document::makeRootElement()"},"2202":{"b":2201,"f":"mongo::mutablebson::Document::makeElementObject(mongo::StringData const&)"},"2203":{"b":1597,"f":"getc"},"2204":{"b":1579,"f":"mongo::BatchedCommandRequest::sizeWriteOps() const"},"2205":{"b":1579,"f":"std::string::_Rep::_M_dispose(std::allocator<char> const&)"},"2206":{"b":1925,"f":"mongo::modifiertable::getType(mongo::StringData const&)"},"2207":{"b":1635,"f":"_obstack_memory_used"},"2208":{"b":2014,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)"},"2209":{"b":1881,"f":"__tls_get_addr"},"2210":{"b":1630,"f":"mongo::PlanCache::notifyOfWriteOp()"},"2211":{"b":1629,"f":"mongo::UpdateDriver::refreshIndexKeys(mongo::UpdateIndexData const*)"},"2212":{"b":1933,"f":"strlen"},"2213":{"b":1641,"f":"boost::unique_lock<boost::mutex>::lock()"},"2214":{"b":1624,"f":"getc"},"2215":{"b":1956,"f":"mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj> const&, mongo::BSONObj*, std::string*)"},"2216":{"b":1634,"f":"mongo::BSONObjBuilder::~BSONObjBuilder()"},"2217":{"b":1698,"f":"mongo::BatchedCommandRequest::getBatchType() const"},"2218":{"b":1579,"f":"std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_erase(std::_Rb_tree_node<unsigned int>*)"},"2219":{"b":1634,"f":"mongo::BSONObjBuilder::BSONObjBuilder(mongo::BSONSizeTracker const&)"},"2220":{"b":2219,"f":"malloc"},"2221":{"b":2095,"f":"mongo::canonicalizeBSONType(mongo::BSONType)"},"2222":{"b":1680,"f":"tc_delete"},"2224":{"b":2181,"f":"ctx_record.part.8"},"2225":{"b":2224,"f":"vpid_record"},"2226":{"b":2225,"f":"lib_ring_buffer_write.constprop.28"},"2227":{"b":1904,"f":"std::_Rb_tree<mongo::BSONObj, mongo::BSONObj, std::_Identity<mongo::BSONObj>, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >::_M_erase(std::_Rb_tree_node<mongo::BSONObj>*)"},"2228":{"b":1840,"f":"__pthread_mutex_lock"},"2229":{"b":1894,"f":"mongo::BSONElement::size() const"},"2230":{"b":2229,"f":"strlen"},"2231":{"b":1900,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)"},"2232":{"b":1761,"f":"mongo::SimpleMutex::lock()"},"2233":{"b":2232,"f":"__pthread_mutex_lock"},"2234":{"b":1579,"f":"mongo::AuthzSessionExternalStateMongod::startRequest()"},"2235":{"b":1602,"f":"mongo::BatchedCommandRequest::getBatchType() const"},"2236":{"b":1737,"f":"std::_Rb_tree<mongo::FieldRef const*, mongo::FieldRef const*, std::_Identity<mongo::FieldRef const*>, mongo::FieldRefSet::FieldRefPtrLessThan, std::allocator<mongo::FieldRef const*> >::_M_insert_unique_(std::_Rb_tree_const_iterator<mongo::FieldRef const*>, mongo::FieldRef const* const&)"},"2237":{"b":2236,"f":"std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)"},"2238":{"b":1707,"f":"mongo::BSONElement::size() const"},"2239":{"b":1720,"f":"mongo::Lock::assertAtLeastReadLocked(mongo::StringData const&)"},"2240":{"b":2239,"f":"mongo::LockState::isLocked(mongo::StringData const&)"},"2241":{"b":2240,"f":"__nss_hosts_lookup"},"2242":{"b":1823,"f":"mongo::BSONObjBuilder::_done()"},"2243":{"b":2132,"f":"mongo::DiskLoc56Bit::operator=(mongo::DiskLoc const&)"},"2244":{"b":1865,"f":"std::string::assign(char const*, unsigned long)"},"2245":{"b":1720,"f":"__pthread_mutex_lock"},"2246":{"b":1598,"f":"mongo::Command::findCommand(std::string const&)"},"2247":{"b":1945,"f":"_ZNKSt11logic_error4whatEv@@GLIBCXX_3.4"},"2248":{"b":2023,"f":"mongo::compareElementValues(mongo::BSONElement const&, mongo::BSONElement const&)"},"2249":{"b":1579,"f":"sys:exit"},"2250":{"b":1579,"f":"sys:shutdown"},"2251":{"b":1579,"f":"sys:close"},"2252":{"b":1579,"f":"sys:madvise"},"3782":{"b":0,"f":"[mongo 3rc9]"},"3783":{"b":3782,"f":"[waitcpu]"},"3784":{"b":3782,"f":"No Stack"},"3785":{"b":3782,"f":"sys:set_robust_list"},"3786":{"b":3782,"f":"No stack"},"3787":{"b":3784,"f":"[waitblocked]"},"3788":{"b":3782,"f":"start_thread"},"3789":{"b":3788,"f":"mongo::PortMessageServer::handleIncomingMsg(void*)"},"3790":{"b":3789,"f":"mongo::MessagingPort::recv(mongo::Message&)"},"3791":{"b":3790,"f":"mongo::Socket::recv(char*, int)"},"3792":{"b":3791,"f":"mongo::Socket::unsafe_recv(char*, int)"},"3793":{"b":3792,"f":"mongo::Socket::_recv(char*, int)"},"3794":{"b":3793,"f":"recv"},"3795":{"b":3794,"f":"sys:recvfrom"},"3796":{"b":3795,"f":"[network]"},"3797":{"b":3782,"f":"[interrupted]"},"3798":{"b":3782,"f":"sys:futex"},"3799":{"b":3782,"f":"sys:msync"},"3800":{"b":3782,"f":"sys:rt_sigprocmask"},"3801":{"b":3782,"f":"sys:gettid"},"3802":{"b":3782,"f":"sys:unknown"},"3803":{"b":3782,"f":"sys:recvfrom"},"3804":{"b":3782,"f":"sys:sendto"},"3805":{"b":3789,"f":"mongo::MyMessageHandler::process(mongo::Message&, mongo::AbstractMessagingPort*, mongo::LastError*)"},"3806":{"b":3805,"f":"mongo::assembleResponse(mongo::OperationContext*, mongo::Message&, mongo::DbResponse&, mongo::HostAndPort const&, bool)"},"3807":{"b":3806,"f":"mongo::runQuery(mongo::OperationContext*, mongo::Message&, mongo::QueryMessage&, mongo::NamespaceString const&, mongo::CurOp&, mongo::Message&, bool)"},"3808":{"b":3807,"f":"mongo::_runCommands(mongo::OperationContext*, char const*, mongo::BSONObj&, mongo::_BufBuilder<mongo::TrivialAllocator>&, mongo::BSONObjBuilder&, bool, int)"},"3809":{"b":3808,"f":"mongo::Command::execCommand(mongo::OperationContext*, mongo::Command*, int, char const*, mongo::BSONObj&, mongo::BSONObjBuilder&, bool)"},"3810":{"b":3809,"f":"mongo::_execCommand(mongo::OperationContext*, mongo::Command*, std::string const&, mongo::BSONObj&, int, std::string&, mongo::BSONObjBuilder&, bool)"},"3811":{"b":3810,"f":"mongo::WriteCmd::run(mongo::OperationContext*, std::string const&, mongo::BSONObj&, int, std::string&, mongo::BSONObjBuilder&, bool)"},"3812":{"b":3811,"f":"mongo::WriteBatchExecutor::executeBatch(mongo::BatchedCommandRequest const&, mongo::BatchedCommandResponse*)"},"3813":{"b":3812,"f":"mongo::WriteBatchExecutor::bulkExecute(mongo::BatchedCommandRequest const&, std::vector<mongo::BatchedUpsertDetail*, std::allocator<mongo::BatchedUpsertDetail*> >*, std::vector<mongo::WriteErrorDetail*, std::allocator<mongo::WriteErrorDetail*> >*)"},"3814":{"b":3813,"f":"mongo::WriteBatchExecutor::execUpdate(mongo::BatchItemRef const&, mongo::BSONObj*, mongo::WriteErrorDetail**)"},"3815":{"b":3814,"f":"mongo::LockerImpl<true>::lockComplete(mongo::ResourceId, mongo::LockMode, unsigned int, bool)"},"3816":{"b":3815,"f":"mongo::CondVarLockGrantNotification::wait(unsigned int)"},"3817":{"b":3816,"f":"pthread_cond_timedwait@@GLIBC_2.3.2"},"3818":{"b":3817,"f":"sys:futex"},"3819":{"b":3818,"f":"[waitblocked]"},"3820":{"b":3803,"f":"[network]"},"3821":{"b":3798,"f":"[waitblocked]"},"3822":{"b":3814,"f":"mongo::LockerImpl<true>::unlock(mongo::ResourceId)"},"3823":{"b":3822,"f":"mongo::LockerImpl<true>::_unlockImpl(mongo::FastMapNoAlloc<mongo::ResourceId, mongo::LockRequest, 16>::IteratorImpl<mongo::FastMapNoAlloc<mongo::ResourceId, mongo::LockRequest, 16>, mongo::LockRequest>&)"},"3824":{"b":3823,"f":"mongo::LockManager::unlock(mongo::LockRequest*)"},"3825":{"b":3814,"f":"mongo::beginCurrentOp(mongo::CurOp*, mongo::Client*, mongo::BatchItemRef const&)"},"3826":{"b":3825,"f":"mongo::BatchedUpdateDocument::getQuery() const"},"3827":{"b":3782,"f":"sys:rt_sigpending"},"3828":{"b":3782,"f":"sys:write"},"3829":{"b":3814,"f":"mongo::PlanExecutor::executePlan()"},"3830":{"b":3829,"f":"mongo::PlanExecutor::getNext(mongo::BSONObj*, mongo::RecordId*)"},"3831":{"b":3830,"f":"mongo::PlanExecutor::getNextSnapshotted(mongo::Snapshotted<mongo::BSONObj>*, mongo::RecordId*)"},"3832":{"b":3831,"f":"mongo::UpdateStage::work(unsigned long*)"},"3833":{"b":3832,"f":"mongo::IDHackStage::work(unsigned long*)"},"3834":{"b":3833,"f":"mongo::BtreeBasedAccessMethod::findSingle(mongo::OperationContext*, mongo::BSONObj const&) const"},"3835":{"b":3834,"f":"mongo::BtreeInterfaceImpl<mongo::BtreeLayoutV1>::Cursor::getKey() const"},"3836":{"b":3835,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getKey(mongo::OperationContext*, mongo::DiskLoc const&, int) const"},"3837":{"b":3836,"f":"mongo::KeyV1::toBson() const"},"3838":{"b":3814,"f":"mongo::getExecutorUpdate(mongo::OperationContext*, mongo::Collection*, mongo::ParsedUpdate*, mongo::OpDebug*, mongo::PlanExecutor**)"},"3839":{"b":3838,"f":"mongo::ParsedUpdate::canYield() const"},"3840":{"b":3839,"f":"mongo::LiteParsedQuery::isQueryIsolated(mongo::BSONObj const&)"},"3841":{"b":3840,"f":"mongo::BSONElement::size() const"},"3842":{"b":3782,"f":"Unknown Symbol"},"3843":{"b":3842,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::insertHere(mongo::OperationContext*, mongo::DiskLoc, int, mongo::KeyV1 const&, mongo::DiskLoc, mongo::DiskLoc, mongo::DiskLoc)"},"3844":{"b":3816,"f":"pthread_mutex_unlock"},"3845":{"b":3844,"f":"_L_unlock_722"},"3846":{"b":3845,"f":"__lll_unlock_wake"},"3847":{"b":3838,"f":"mongo::WorkingSet::WorkingSet()"},"3848":{"b":3847,"f":"std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const"},"3849":{"b":3806,"f":"mongo::QueryMessage::QueryMessage(mongo::DbMessage&)"},"3850":{"b":3849,"f":"mongo::DbMessage::nextJsObj()"},"3851":{"b":3850,"f":"mongo::validateBSON(char const*, unsigned long)"},"3852":{"b":3782,"f":"std::string::_M_leak_hard()"},"3853":{"b":3832,"f":"mongo::UpdateStage::transformAndUpdate(mongo::Snapshotted<mongo::BSONObj> const&, mongo::RecordId&)"},"3854":{"b":3853,"f":"mongo::(anonymous namespace)::ensureIdAndFirst(mongo::mutablebson::Document&)"},"3855":{"b":3805,"f":"mongo::Socket::send(char const*, int, char const*)"},"3856":{"b":3855,"f":"mongo::Socket::_send(char const*, int, char const*)"},"3857":{"b":3856,"f":"send"},"3858":{"b":3853,"f":"mongo::Collection::updateDocument(mongo::OperationContext*, mongo::RecordId const&, mongo::Snapshotted<mongo::BSONObj> const&, mongo::BSONObj const&, bool, bool, mongo::OpDebug*)"},"3859":{"b":3858,"f":"mongo::BtreeBasedAccessMethod::validateUpdate(mongo::OperationContext*, mongo::BSONObj const&, mongo::BSONObj const&, mongo::RecordId const&, mongo::InsertDeleteOptions const&, mongo::UpdateTicket*)"},"3860":{"b":3859,"f":"mongo::setDifference(std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> > const&, std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> > const&, std::vector<mongo::BSONObj*, std::allocator<mongo::BSONObj*> >*)"},"3861":{"b":3814,"f":"mongo::DatabaseHolder::get(mongo::OperationContext*, mongo::StringData const&) const"},"3862":{"b":3861,"f":"mongo::LockerImpl<true>::isDbLockedForMode(mongo::StringData const&, mongo::LockMode) const"},"3863":{"b":3862,"f":"mongo::ResourceId::ResourceId(mongo::ResourceType, mongo::StringData const&)"},"3864":{"b":3831,"f":"mongo::ElapsedTracker::intervalHasElapsed()"},"3865":{"b":3853,"f":"mongo::mutablebson::Document::getObject() const"},"3866":{"b":3865,"f":"void mongo::mutablebson::Document::Impl::writeChildren<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*) const"},"3867":{"b":3859,"f":"mongo::BtreeKeyGenerator::getKeys(mongo::BSONObj const&, std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >*) const"},"3868":{"b":3867,"f":"mongo::BtreeKeyGeneratorV1::getKeysImpl(std::vector<char const*, std::allocator<char const*> >, std::vector<mongo::BSONElement, std::allocator<mongo::BSONElement> >, mongo::BSONObj const&, std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >*) const"},"3869":{"b":3853,"f":"mongo::(anonymous namespace)::validate(mongo::BSONObj const&, mongo::FieldRefSet const&, mongo::mutablebson::Document const&, std::vector<mongo::FieldRef*, std::allocator<mongo::FieldRef*> > const*, mongo::ModifierInterface::Options const&)"},"3870":{"b":3869,"f":"mongo::logger::LogComponentSettings::shouldLog(mongo::logger::LogComponent, mongo::logger::LogSeverity) const"},"3871":{"b":3815,"f":"mongo::LockerImpl<true>::lockComplete(mongo::ResourceId, mongo::LockMode, unsigned int, bool)"},"3872":{"b":3871,"f":"mongo::CondVarLockGrantNotification::wait(unsigned int)"},"3873":{"b":3872,"f":"pthread_cond_timedwait@@GLIBC_2.3.2"},"3874":{"b":3873,"f":"sys:futex"},"3875":{"b":3874,"f":"[waitblocked]"},"3876":{"b":3838,"f":"mongo::BSONElement::wrap() const"},"3877":{"b":3876,"f":"mongo::BSONObjBuilderValueStream::endField(mongo::StringData const&)"},"3878":{"b":3782,"f":"empty"},"3879":{"b":3833,"f":"mongo::WorkingSet::allocate()"},"3880":{"b":3879,"f":"operator new(unsigned long)"},"3881":{"b":3838,"f":"mongo::PlanExecutor::make(mongo::OperationContext*, mongo::WorkingSet*, mongo::PlanStage*, mongo::Collection const*, mongo::PlanExecutor::YieldPolicy, mongo::PlanExecutor**)"},"3882":{"b":3881,"f":"mongo::PlanExecutor::make(mongo::OperationContext*, mongo::WorkingSet*, mongo::PlanStage*, mongo::QuerySolution*, mongo::CanonicalQuery*, mongo::Collection const*, std::string const&, mongo::PlanExecutor::YieldPolicy, mongo::PlanExecutor**)"},"3883":{"b":3882,"f":"mongo::PlanExecutor::pickBestPlan(mongo::PlanExecutor::YieldPolicy)"},"3884":{"b":3883,"f":"mongo::(anonymous namespace)::getStageByType(mongo::PlanStage*, mongo::StageType)"},"3885":{"b":3884,"f":"mongo::UpdateStage::getChildren() const"},"3886":{"b":3867,"f":"std::pair<std::_Rb_tree_iterator<mongo::BSONObj>, bool> std::_Rb_tree<mongo::BSONObj, mongo::BSONObj, std::_Identity<mongo::BSONObj>, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >::_M_insert_unique<mongo::BSONObj>(mongo::BSONObj&&)"},"3887":{"b":3886,"f":"operator new(unsigned long)"},"3888":{"b":3814,"f":"__event_probe__tracekit___begin(void*, char const*)"},"3889":{"b":3888,"f":"lttng_event_reserve"},"3890":{"b":3858,"f":"mongo::BtreeBasedAccessMethod::update(mongo::OperationContext*, mongo::UpdateTicket const&, long*)"},"3891":{"b":3890,"f":"mongo::BtreeInterfaceImpl<mongo::BtreeLayoutV1>::unindex(mongo::OperationContext*, mongo::BSONObj const&, mongo::RecordId const&, bool)"},"3892":{"b":3891,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::unindex(mongo::OperationContext*, mongo::BSONObj const&, mongo::DiskLoc const&)"},"3893":{"b":3892,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::mayBalanceWithNeighbors(mongo::OperationContext*, mongo::BtreeBucketV1*, mongo::DiskLoc)"},"3894":{"b":3893,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_packedDataSize(mongo::BtreeBucketV1*, int)"},"3895":{"b":3894,"f":"mongo::KeyV1::dataSize() const"},"3896":{"b":3782,"f":"mongo::BatchedCommandResponse::unsetErrDetails()"},"3897":{"b":3782,"f":"mongo::IndexCatalog::findIdIndex(mongo::OperationContext*) const"},"3898":{"b":3838,"f":"mongo::UpdateStage::UpdateStage(mongo::OperationContext*, mongo::UpdateStageParams const&, mongo::WorkingSet*, mongo::Collection*, mongo::PlanStage*)"},"3899":{"b":3898,"f":"operator new(unsigned long)"},"3900":{"b":3812,"f":"mongo::(anonymous namespace)::timerNowPosixMonotonicClock()"},"3901":{"b":3900,"f":"clock_gettime"},"3902":{"b":3853,"f":"mongo::UpdateDriver::update(mongo::StringData const&, mongo::mutablebson::Document*, mongo::BSONObj*, mongo::FieldRefSet*, bool*)"},"3903":{"b":3902,"f":"mongo::ModifierInc::prepare(mongo::mutablebson::Element, mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)"},"3904":{"b":3903,"f":"mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&, mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)"},"3905":{"b":3904,"f":"mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData const&) const"},"3906":{"b":3905,"f":"__nss_hosts_lookup"},"3907":{"b":3894,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::mayDropKey(mongo::BtreeBucketV1*, int, int)"},"3908":{"b":3858,"f":"mongo::KeyPattern::isIdKeyPattern(mongo::BSONObj const&)"},"3909":{"b":3908,"f":"mongo::BSONElement::size() const"},"3910":{"b":3909,"f":"strlen"},"3911":{"b":3806,"f":"_ZNKSt9exception4whatEv@@GLIBCXX_3.4"},"3912":{"b":3814,"f":"mongo::UpdateDriver::~UpdateDriver()"},"3913":{"b":3912,"f":"mongo::mutablebson::Document::~Document()"},"3914":{"b":3913,"f":"std::string::_Rep::_M_dispose(std::allocator<char> const&)"},"3915":{"b":3902,"f":"mongo::FieldRefSet::insert(mongo::FieldRef const*, mongo::FieldRef const**)"},"3916":{"b":3915,"f":"operator new(unsigned long)"},"3917":{"b":3842,"f":"__tls_get_addr"},"3918":{"b":3853,"f":"mongo::DurRecoveryUnit::beginUnitOfWork(mongo::OperationContext*)"},"3919":{"b":3838,"f":"mongo::CollectionInfoCache::indexKeys(mongo::OperationContext*) const"},"3920":{"b":3885,"f":"void std::vector<mongo::PlanStage*, std::allocator<mongo::PlanStage*> >::_M_emplace_back_aux<mongo::PlanStage*>(mongo::PlanStage*&&)"},"3921":{"b":3920,"f":"operator new(unsigned long)"},"3922":{"b":3782,"f":"mongo::UpdateStage::invalidate(mongo::OperationContext*, mongo::RecordId const&, mongo::InvalidationType)"},"3923":{"b":3834,"f":"mongo::BtreeInterfaceImpl<mongo::BtreeLayoutV1>::Cursor::getRecordId() const"},"3924":{"b":3923,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getDiskLoc(mongo::OperationContext*, mongo::DiskLoc const&, int) const"},"3925":{"b":3924,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getBucket(mongo::OperationContext*, mongo::RecordId) const"},"3926":{"b":3925,"f":"mongo::RecordStoreV1Base::dataFor(mongo::OperationContext*, mongo::RecordId const&) const"},"3927":{"b":3926,"f":"mongo::MmapV1ExtentManager::recordForV1(mongo::DiskLoc const&) const"},"3928":{"b":3890,"f":"mongo::BtreeInterfaceImpl<mongo::BtreeLayoutV1>::insert(mongo::OperationContext*, mongo::BSONObj const&, mongo::RecordId const&, bool)"},"3929":{"b":3928,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::insert(mongo::OperationContext*, mongo::BSONObj const&, mongo::DiskLoc const&, bool)"},"3930":{"b":3929,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_insert(mongo::OperationContext*, mongo::BtreeBucketV1*, mongo::DiskLoc, mongo::KeyV1 const&, mongo::DiskLoc, bool, mongo::DiskLoc, mongo::DiskLoc)"},"3931":{"b":3930,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_insert(mongo::OperationContext*, mongo::BtreeBucketV1*, mongo::DiskLoc, mongo::KeyV1 const&, mongo::DiskLoc, bool, mongo::DiskLoc, mongo::DiskLoc)"},"3932":{"b":3931,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::insertHere(mongo::OperationContext*, mongo::DiskLoc, int, mongo::KeyV1 const&, mongo::DiskLoc, mongo::DiskLoc, mongo::DiskLoc)"},"3933":{"b":3932,"f":"mongo::DiskLoc56Bit::operator=(mongo::DiskLoc const&)"},"3934":{"b":3782,"f":"mongo::uassertStatusOK(mongo::Status const&)"},"3935":{"b":3902,"f":"mongo::ModifierInc::log(mongo::LogBuilder*) const"},"3936":{"b":3935,"f":"mongo::LogBuilder::addToSets(mongo::mutablebson::Element)"},"3937":{"b":3936,"f":"mongo::mutablebson::Document::makeElementObject(mongo::StringData const&)"},"3938":{"b":3937,"f":"void std::vector<char, std::allocator<char> >::_M_range_insert<char const*>(__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, char const*, char const*, std::forward_iterator_tag)"},"3939":{"b":3938,"f":"__nss_hosts_lookup"},"3940":{"b":3805,"f":"mongo::DbResponse::~DbResponse()"},"3941":{"b":3940,"f":"__libc_free"},"3942":{"b":3806,"f":"mongo::LockerImpl<true>::isLocked() const"},"3943":{"b":3942,"f":"mongo::LockerImpl<true>::getLockMode(mongo::ResourceId) const"},"3946":{"b":3867,"f":"tc_delete"},"3947":{"b":3892,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getRootLoc(mongo::OperationContext*) const"},"3948":{"b":3814,"f":"mongo::Client::Context::Context(mongo::OperationContext*, std::string const&, bool)"},"3949":{"b":3948,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)"},"3950":{"b":3811,"f":"mongo::NamespaceString::NamespaceString(mongo::StringData const&, mongo::StringData const&)"},"3951":{"b":3950,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)"},"3952":{"b":3951,"f":"std::string::_S_construct(unsigned long, char, std::allocator<char> const&)"},"3953":{"b":3814,"f":"mongo::Database::getCollection(mongo::StringData const&) const"},"3954":{"b":3953,"f":"mongo::UnorderedFastKeyTable<mongo::StringData, std::string, mongo::Collection*, mongo::StringData::Hasher, mongo::StringMapDefaultEqual, mongo::StringMapDefaultConvertor, mongo::StringMapDefaultConvertorOther>::Area::find(mongo::StringData const&, unsigned long, int*, mongo::UnorderedFastKeyTable<mongo::StringData, std::string, mongo::Collection*, mongo::StringData::Hasher, mongo::StringMapDefaultEqual, mongo::StringMapDefaultConvertor, mongo::StringMapDefaultConvertorOther> const&) const"},"3955":{"b":3954,"f":"mongo::StringData::compare(mongo::StringData const&) const"},"3956":{"b":3955,"f":"__nss_hosts_lookup"},"3957":{"b":3858,"f":"mongo::OwnedPointerMap<mongo::IndexDescriptor*, mongo::UpdateTicket, std::less<mongo::IndexDescriptor*> >::~OwnedPointerMap()"},"3958":{"b":3853,"f":"mongo::WriteUnitOfWork::commit()"},"3959":{"b":3958,"f":"mongo::LockerImpl<true>::endWriteUnitOfWork()"},"3960":{"b":3959,"f":"mongo::LockerImpl<true>::lockComplete(mongo::ResourceId, mongo::LockMode, unsigned int, bool)"},"3961":{"b":3960,"f":"mongo::CondVarLockGrantNotification::wait(unsigned int)"},"3962":{"b":3961,"f":"pthread_cond_timedwait@@GLIBC_2.3.2"},"3963":{"b":3962,"f":"sys:futex"},"3964":{"b":3963,"f":"[waitblocked]"},"3965":{"b":3912,"f":"mongo::UpdateDriver::clear()"},"3966":{"b":3965,"f":"mongo::ModifierInc::~ModifierInc()"},"3967":{"b":3966,"f":"mongo::ModifierInc::~ModifierInc()"},"3968":{"b":3858,"f":"mongo::RecordStoreV1Base::updateRecord(mongo::OperationContext*, mongo::RecordId const&, char const*, int, bool, mongo::UpdateNotifier*)"},"3969":{"b":3814,"f":"mongo::ParsedUpdate::ParsedUpdate(mongo::OperationContext*, mongo::UpdateRequest const*)"},"3970":{"b":3969,"f":"mongo::UpdateDriver::UpdateDriver(mongo::UpdateDriver::Options const&)"},"3971":{"b":3970,"f":"mongo::mutablebson::Document::Document()"},"3972":{"b":3971,"f":"mongo::mutablebson::Document::Impl::Impl(mongo::mutablebson::Document::InPlaceMode)"},"3973":{"b":3972,"f":"operator new(unsigned long)"},"3974":{"b":3811,"f":"mongo::BatchedUpdateRequest::parseBSON(mongo::BSONObj const&, std::string*)"},"3975":{"b":3948,"f":"mongo::Client::Context::_finishInit()"},"3976":{"b":3975,"f":"mongo::CurOp::enter(char const*, int)"},"3977":{"b":3976,"f":"envz_strip"},"3978":{"b":3814,"f":"mongo::Lock::DBLock::DBLock(mongo::Locker*, mongo::StringData const&, mongo::LockMode)"},"3979":{"b":3806,"f":"mongo::CurOp::ensureStarted()"},"3980":{"b":3814,"f":"mongo::ParsedUpdate::parseRequest()"},"3981":{"b":3980,"f":"mongo::ParsedUpdate::parseUpdate()"},"3982":{"b":3981,"f":"mongo::UpdateDriver::parse(mongo::BSONObj const&, bool)"},"3983":{"b":3982,"f":"mongo::modifiertable::getType(mongo::StringData const&)"},"3984":{"b":3983,"f":"std::_Hashtable<mongo::StringData, std::pair<mongo::StringData const, mongo::modifiertable::(anonymous namespace)::ModifierEntry*>, std::allocator<std::pair<mongo::StringData const, mongo::modifiertable::(anonymous namespace)::ModifierEntry*> >, std::__detail::_Select1st, std::equal_to<mongo::StringData>, mongo::StringData::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, mongo::StringData const&, unsigned long) const"},"3985":{"b":3984,"f":"__nss_hosts_lookup"},"3986":{"b":3915,"f":"std::_Rb_tree<mongo::FieldRef const*, mongo::FieldRef const*, std::_Identity<mongo::FieldRef const*>, mongo::FieldRefSet::FieldRefPtrLessThan, std::allocator<mongo::FieldRef const*> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<mongo::FieldRef const*>, mongo::FieldRef const* const&)"},"3987":{"b":3915,"f":"std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)"},"3988":{"b":3853,"f":"std::pair<std::__detail::_Node_iterator<mongo::RecordId, true, true>, bool> std::_Hashtable<mongo::RecordId, mongo::RecordId, std::allocator<mongo::RecordId>, std::__detail::_Identity, std::equal_to<mongo::RecordId>, mongo::RecordId::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<mongo::RecordId const&>(mongo::RecordId const&, std::integral_constant<bool, true>)"},"3989":{"b":3988,"f":"std::_Hashtable<mongo::RecordId, mongo::RecordId, std::allocator<mongo::RecordId>, std::__detail::_Identity, std::equal_to<mongo::RecordId>, mongo::RecordId::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<mongo::RecordId, true>*)"},"3990":{"b":3989,"f":"std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const"},"3991":{"b":3814,"f":"mongo::Lock::CollectionLock::~CollectionLock()"},"3992":{"b":3809,"f":"mongo::Command::_checkAuthorization(mongo::Command*, mongo::ClientBasic*, std::string const&, mongo::BSONObj const&, bool)"},"3993":{"b":3812,"f":"mongo::Status::unref(mongo::Status::ErrorInfo*)"},"3994":{"b":3892,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::btreemod(mongo::OperationContext*, mongo::BtreeBucketV1*)"},"3995":{"b":3994,"f":"mongo::DurRecoveryUnit::writingPtr(void*, unsigned long)"},"3996":{"b":3995,"f":"std::string::append(char const*, unsigned long)"},"3997":{"b":3996,"f":"envz_strip"},"3998":{"b":3884,"f":"mongo::(anonymous namespace)::getStageByType(mongo::PlanStage*, mongo::StageType)"},"3999":{"b":3853,"f":"mongo::UpdateLifecycleImpl::getImmutableFields() const"},"4000":{"b":3932,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::basicInsert(mongo::OperationContext*, mongo::BtreeBucketV1*, mongo::DiskLoc, int&, mongo::KeyV1 const&, mongo::DiskLoc)"},"4001":{"b":4000,"f":"mongo::DurRecoveryUnit::writingPtr(void*, unsigned long)"},"4002":{"b":4001,"f":"void std::vector<mongo::DurRecoveryUnit::Write, std::allocator<mongo::DurRecoveryUnit::Write> >::_M_emplace_back_aux<mongo::DurRecoveryUnit::Write>(mongo::DurRecoveryUnit::Write&&)"},"4003":{"b":4002,"f":"operator new(unsigned long)"},"4004":{"b":3876,"f":"mongo::mongoMalloc(unsigned long)"},"4005":{"b":4004,"f":"malloc"},"4006":{"b":3811,"f":"mongo::LastErrorHolder::get(bool)"},"4007":{"b":4006,"f":"mongo::LastErrorHolder::_get(bool)"},"4008":{"b":4007,"f":"boost::detail::get_tss_data(void const*)"},"4009":{"b":4008,"f":"boost::detail::find_tss_data(void const*)"},"4010":{"b":3806,"f":"mongo::Message::header() const"},"4011":{"b":3833,"f":"mongo::Collection::docFor(mongo::OperationContext*, mongo::RecordId const&) const"},"4012":{"b":4011,"f":"mongo::RecordStoreV1Base::dataFor(mongo::OperationContext*, mongo::RecordId const&) const"},"4013":{"b":3842,"f":"envz_strip"},"4014":{"b":3860,"f":"mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj const&, bool) const"},"4015":{"b":4014,"f":"mongo::BSONElement::size() const"},"4016":{"b":3809,"f":"mongo::repl::getGlobalReplicationCoordinator()"},"4017":{"b":3782,"f":"std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long)"},"4018":{"b":4017,"f":"[blockdevice]"},"4019":{"b":3848,"f":"cbrt"},"4020":{"b":3834,"f":"mongo::BtreeInterfaceImpl<mongo::BtreeLayoutV1>::Cursor::locate(mongo::BSONObj const&, mongo::RecordId const&)"},"4021":{"b":4020,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::locate(mongo::OperationContext*, mongo::BSONObj const&, mongo::DiskLoc const&, int, int*, mongo::DiskLoc*) const"},"4022":{"b":4021,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_locate(mongo::OperationContext*, mongo::DiskLoc const&, mongo::KeyV1 const&, int*, bool*, mongo::DiskLoc const&, int) const"},"4023":{"b":4022,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getBucket(mongo::OperationContext*, mongo::RecordId) const"},"4024":{"b":4023,"f":"mongo::RecordStoreV1Base::dataFor(mongo::OperationContext*, mongo::RecordId const&) const"},"4025":{"b":3803,"f":"[waitblocked]"},"4026":{"b":3858,"f":"mongo::PlanCache::notifyOfWriteOp()"},"4027":{"b":3867,"f":"__nss_hosts_lookup"},"4028":{"b":3978,"f":"mongo::LockerImpl<true>::lockMMAPV1Flush()"},"4029":{"b":4028,"f":"mongo::LockerImpl<true>::lockComplete(mongo::ResourceId, mongo::LockMode, unsigned int, bool)"},"4030":{"b":4029,"f":"mongo::CondVarLockGrantNotification::wait(unsigned int)"},"4031":{"b":4030,"f":"pthread_cond_timedwait@@GLIBC_2.3.2"},"4032":{"b":4031,"f":"sys:futex"},"4033":{"b":4032,"f":"[waitblocked]"},"4034":{"b":3814,"f":"__event_probe__tracekit___end(void*)"},"4035":{"b":4034,"f":"lttng_event_reserve"},"4036":{"b":4035,"f":"sched_getcpu"},"4037":{"b":3806,"f":"mongo::AuthorizationSession::startRequest(mongo::OperationContext*)"},"4038":{"b":3833,"f":"mongo::Collection::documentNeedsFetch(mongo::OperationContext*, mongo::RecordId const&) const"},"4039":{"b":3838,"f":"operator new(unsigned long)"},"4040":{"b":3811,"f":"mongo::BatchedUpdateRequest::setCollNameNS(mongo::NamespaceString const&)"},"4041":{"b":4040,"f":"std::string::assign(std::string const&)"},"4042":{"b":3814,"f":"__event_probe__tracekit___stepBegin(void*, char const*)"},"4043":{"b":3805,"f":"mongo::OperationContextImpl::OperationContextImpl()"},"4044":{"b":3868,"f":"mongo::BtreeKeyGeneratorV1::getKeysImplWithArray(std::vector<char const*, std::allocator<char const*> >, std::vector<mongo::BSONElement, std::allocator<mongo::BSONElement> >, mongo::BSONObj const&, std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >*, unsigned int, mongo::BSONObj const&) const"},"4045":{"b":4044,"f":"mongo::BSONObjBuilderValueStream::endField(mongo::StringData const&)"},"4046":{"b":3974,"f":"mongo::FieldParser::FieldState mongo::FieldParser::extract<mongo::BatchedUpdateDocument>(mongo::BSONElement, mongo::BSONField<std::vector<mongo::BatchedUpdateDocument*, std::allocator<mongo::BatchedUpdateDocument*> > > const&, std::vector<mongo::BatchedUpdateDocument*, std::allocator<mongo::BatchedUpdateDocument*> >*, std::string*)"},"4047":{"b":4046,"f":"mongo::BatchedUpdateDocument::parseBSON(mongo::BSONObj const&, std::string*)"},"4048":{"b":4047,"f":"mongo::BSONElement::size() const"},"4049":{"b":4048,"f":"strlen"},"4050":{"b":3831,"f":"mongo::PlanYieldPolicy::shouldYield()"},"4051":{"b":4024,"f":"mongo::MmapV1ExtentManager::recordForV1(mongo::DiskLoc const&) const"},"4052":{"b":4051,"f":"mongo::MmapV1ExtentManager::_recordForV1(mongo::DiskLoc const&) const"},"4053":{"b":4052,"f":"mongo::MmapV1ExtentManager::_getOpenFile(int) const"},"4054":{"b":3805,"f":"mongo::OperationContextImpl::~OperationContextImpl()"},"4055":{"b":4054,"f":"mongo::DurRecoveryUnit::~DurRecoveryUnit()"},"4056":{"b":4055,"f":"getc"},"4057":{"b":3838,"f":"mongo::ParsedUpdate::getRequest() const"},"4058":{"b":3894,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getFullKey(mongo::BtreeBucketV1 const*, int)"},"4059":{"b":4058,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getKeyHeader(mongo::BtreeBucketV1 const*, int)"},"4060":{"b":3883,"f":"mongo::PlanExecutor::registerExec()"},"4061":{"b":4060,"f":"operator new(unsigned long)"},"4062":{"b":4022,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_find(mongo::OperationContext*, mongo::BtreeBucketV1*, mongo::KeyV1 const&, mongo::DiskLoc const&, bool, int*, bool*) const"},"4063":{"b":4062,"f":"mongo::DiskLoc56Bit::operator=(mongo::DiskLoc const&)"},"4064":{"b":3842,"f":"std::string::_Rep::_M_dispose(std::allocator<char> const&)"},"4065":{"b":3968,"f":"mongo::DurRecoveryUnit::writingPtr(void*, unsigned long)"},"4066":{"b":4065,"f":"std::string::append(char const*, unsigned long)"},"4067":{"b":4066,"f":"std::string::reserve(unsigned long)"},"4068":{"b":4067,"f":"std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long)"},"4069":{"b":4068,"f":"std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)"},"4070":{"b":4069,"f":"getc"},"4071":{"b":3782,"f":"envz_strip"},"4072":{"b":3959,"f":"mongo::LockerImpl<true>::unlock(mongo::ResourceId)"},"4073":{"b":4072,"f":"mongo::LockerImpl<true>::_unlockImpl(mongo::FastMapNoAlloc<mongo::ResourceId, mongo::LockRequest, 16>::IteratorImpl<mongo::FastMapNoAlloc<mongo::ResourceId, mongo::LockRequest, 16>, mongo::LockRequest>&)"},"4074":{"b":4073,"f":"mongo::LockManager::unlock(mongo::LockRequest*)"},"4075":{"b":3814,"f":"__event_probe__tracekit___stepEnd(void*, char const*)"},"4076":{"b":4075,"f":"lttng_event_reserve"},"4077":{"b":4076,"f":"ctx_record.part.8"},"4078":{"b":4077,"f":"vpid_record"},"4079":{"b":4078,"f":"__getpid"},"4080":{"b":3842,"f":"mongo::BtreeBasedAccessMethod::validateUpdate(mongo::OperationContext*, mongo::BSONObj const&, mongo::BSONObj const&, mongo::RecordId const&, mongo::InsertDeleteOptions const&, mongo::UpdateTicket*)"},"4081":{"b":4024,"f":"mongo::RecordStoreV1Base::recordFor(mongo::DiskLoc const&) const"},"4082":{"b":3809,"f":"mongo::OperationContextImpl::checkForInterrupt() const"},"4083":{"b":4082,"f":"mongo::OperationContextImpl::checkForInterruptNoAssert() const"},"4084":{"b":3812,"f":"tc_delete"},"4085":{"b":3782,"f":"std::string::find(char, unsigned long) const"},"4086":{"b":3811,"f":"mongo::repl::ReplicationCoordinatorImpl::getGetLastErrorDefault()"},"4087":{"b":3808,"f":"mongo::Query::hasReadPreference(mongo::BSONObj const&)"},"4088":{"b":4087,"f":"mongo::Query::isComplex(mongo::BSONObj const&, bool*)"},"4089":{"b":4088,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"4090":{"b":4089,"f":"mongo::BSONElement::size() const"},"4091":{"b":4044,"f":"mongo::BtreeKeyGeneratorV1::extractNextElement(mongo::BSONObj const&, mongo::BSONObj const&, char const*&, bool&) const"},"4092":{"b":4091,"f":"mongo::BSONObj::getFieldDottedOrArray(char const*&) const"},"4093":{"b":3838,"f":"envz_strip"},"4094":{"b":4042,"f":"lttng_event_reserve"},"4095":{"b":4094,"f":"lib_ring_buffer_reserve_slow"},"4096":{"b":4095,"f":"lib_ring_buffer_switch_old_end.isra.29"},"4097":{"b":4096,"f":"lib_ring_buffer_wakeup"},"4098":{"b":4097,"f":"__write_nocancel"},"4099":{"b":3825,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)"},"4100":{"b":4099,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"4101":{"b":4100,"f":"envz_strip"},"4102":{"b":4055,"f":"tc_delete"},"4103":{"b":3857,"f":"__pthread_disable_asynccancel"},"4104":{"b":4028,"f":"mongo::LockerImpl<true>::lock(mongo::ResourceId, mongo::LockMode, unsigned int, bool)"},"4105":{"b":3853,"f":"mongo::repl::logOp(mongo::OperationContext*, char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, bool*, bool)"},"4106":{"b":3811,"f":"mongo::BatchedCommandResponse::toBSON() const"},"4107":{"b":3879,"f":"std::vector<mongo::WorkingSet::MemberHolder, std::allocator<mongo::WorkingSet::MemberHolder> >::_M_default_append(unsigned long)"},"4108":{"b":3915,"f":"mongo::FieldRef::FieldRef(mongo::StringData const&)"},"4109":{"b":4108,"f":"mongo::FieldRef::parse(mongo::StringData const&)"},"4110":{"b":4011,"f":"mongo::OperationContextImpl::recoveryUnit() const"},"4111":{"b":4022,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_locate(mongo::OperationContext*, mongo::DiskLoc const&, mongo::KeyV1 const&, int*, bool*, mongo::DiskLoc const&, int) const"},"4112":{"b":4111,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_find(mongo::OperationContext*, mongo::BtreeBucketV1*, mongo::KeyV1 const&, mongo::DiskLoc const&, bool, int*, bool*) const"},"4113":{"b":4112,"f":"mongo::KeyV1::woCompare(mongo::KeyV1 const&, mongo::Ordering const&) const"},"4114":{"b":3958,"f":"mongo::DurRecoveryUnit::commitUnitOfWork()"},"4115":{"b":4114,"f":"mongo::DurRecoveryUnit::commitChanges()"},"4116":{"b":4115,"f":"mongo::DurRecoveryUnit::pushChangesToDurSubSystem()"},"4117":{"b":4116,"f":"void std::__introsort_loop<__gnu_cxx::__normal_iterator<mongo::DurRecoveryUnit::Write*, std::vector<mongo::DurRecoveryUnit::Write, std::allocator<mongo::DurRecoveryUnit::Write> > >, long>(__gnu_cxx::__normal_iterator<mongo::DurRecoveryUnit::Write*, std::vector<mongo::DurRecoveryUnit::Write, std::allocator<mongo::DurRecoveryUnit::Write> > >, __gnu_cxx::__normal_iterator<mongo::DurRecoveryUnit::Write*, std::vector<mongo::DurRecoveryUnit::Write, std::allocator<mongo::DurRecoveryUnit::Write> > >, long)"},"4118":{"b":3889,"f":"ctx_record.part.8"},"4119":{"b":4118,"f":"lib_ring_buffer_write.constprop.28"},"4120":{"b":4119,"f":"envz_strip"},"4121":{"b":3814,"f":"tp_rcu_dereference_sym_bp"},"4122":{"b":3888,"f":"lib_ring_buffer_strcpy.constprop.27"},"4123":{"b":3902,"f":"void mongo::mutablebson::Document::Impl::writeChildren<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*) const"},"4124":{"b":4123,"f":"void mongo::mutablebson::Document::Impl::writeElement<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*, mongo::StringData const*) const [clone .constprop.169]"},"4125":{"b":4124,"f":"void mongo::mutablebson::Document::Impl::writeChildren<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*) const"},"4126":{"b":4125,"f":"void mongo::mutablebson::Document::Impl::writeElement<mongo::BSONObjBuilder>(unsigned int, mongo::BSONObjBuilder*, mongo::StringData const*) const [clone .constprop.169]"},"4127":{"b":3806,"f":"mongo::CurOp::reset(mongo::HostAndPort const&, int)"},"4128":{"b":4127,"f":"mongo::CurOp::reset()"},"4129":{"b":4128,"f":"mongo::OpDebug::reset()"},"4130":{"b":4105,"f":"mongo::AuthorizationManager::logOp(char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, bool*)"},"4131":{"b":4130,"f":"mongo::AuthzManagerExternalStateLocal::logOp(char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, bool*)"},"4132":{"b":4131,"f":"_ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv@@GLIBCXX_3.4"},"4133":{"b":3859,"f":"operator new(unsigned long)"},"4134":{"b":3836,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getBucket(mongo::OperationContext*, mongo::RecordId) const"},"4135":{"b":4134,"f":"mongo::RecordStoreV1Base::dataFor(mongo::OperationContext*, mongo::RecordId const&) const"},"4136":{"b":4135,"f":"mongo::MmapV1ExtentManager::recordForV1(mongo::DiskLoc const&) const"},"4137":{"b":4136,"f":"mongo::MmapV1ExtentManager::_recordForV1(mongo::DiskLoc const&) const"},"4138":{"b":3782,"f":"__event_probe__tracekit___end(void*)"},"4139":{"b":4106,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)"},"4140":{"b":3825,"f":"mongo::CurOp::reset(mongo::HostAndPort const&, int)"},"4141":{"b":4140,"f":"std::string::assign(std::string const&)"},"4142":{"b":3892,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_locate(mongo::OperationContext*, mongo::DiskLoc const&, mongo::KeyV1 const&, int*, bool*, mongo::DiskLoc const&, int) const"},"4143":{"b":4092,"f":"_obstack_memory_used"},"4144":{"b":3972,"f":"mongo::BSONObjBuilder::BSONObjBuilder(mongo::_BufBuilder<mongo::TrivialAllocator>&)"},"4145":{"b":3950,"f":"__nss_hosts_lookup"},"4146":{"b":3959,"f":"mongo::LockerImpl<true>::lock(mongo::ResourceId, mongo::LockMode, unsigned int, bool)"},"4147":{"b":4146,"f":"mongo::LockerImpl<true>::lockBegin(mongo::ResourceId, mongo::LockMode)"},"4148":{"b":4147,"f":"mongo::LockerImpl<true>::getWaitingResource() const"},"4149":{"b":3814,"f":"mongo::Client::Context::~Context()"},"4150":{"b":4149,"f":"mongo::CurOp::recordGlobalTime(bool, long long) const"},"4151":{"b":4150,"f":"getc"},"4152":{"b":3806,"f":"mongo::DbMessage::DbMessage(mongo::Message const&)"},"4153":{"b":4152,"f":"strnlen"},"4154":{"b":3904,"f":"mongo::mutablebson::Element::hasChildren() const"},"4155":{"b":4154,"f":"mongo::mutablebson::Document::Impl::resolveLeftChild(unsigned int)"},"4156":{"b":3814,"f":"mongo::LockerImpl<true>::lock(mongo::ResourceId, mongo::LockMode, unsigned int, bool)"},"4157":{"b":4156,"f":"mongo::LockerImpl<true>::lockBegin(mongo::ResourceId, mongo::LockMode)"},"4158":{"b":4157,"f":"mongo::LockManager::lock(mongo::ResourceId, mongo::LockRequest*, mongo::LockMode)"},"4159":{"b":4158,"f":"pthread_mutex_unlock"},"4160":{"b":4159,"f":"_L_unlock_722"},"4161":{"b":4160,"f":"__lll_unlock_wake"},"4162":{"b":4012,"f":"mongo::MmapV1ExtentManager::recordForV1(mongo::DiskLoc const&) const"},"4163":{"b":4162,"f":"mongo::MmapV1ExtentManager::_recordForV1(mongo::DiskLoc const&) const"},"4164":{"b":3782,"f":"mongo::WorkingSet::free(unsigned long const&)"},"4165":{"b":3889,"f":"rcu_read_lock_bp"},"4166":{"b":4077,"f":"lib_ring_buffer_write.constprop.28"},"4167":{"b":4166,"f":"envz_strip"},"4168":{"b":3782,"f":"strlen"},"4169":{"b":3814,"f":"mongo::Lock::DBLock::~DBLock()"},"4170":{"b":4169,"f":"mongo::Lock::GlobalLock::_unlock()"},"4171":{"b":4170,"f":"mongo::LockerImpl<true>::unlockAll()"},"4172":{"b":3782,"f":"mongo::LockerImpl<true>::isDbLockedForMode(mongo::StringData const&, mongo::LockMode) const"},"4173":{"b":3812,"f":"mongo::WriteBatchExecutor::validateBatch(mongo::BatchedCommandRequest const&)"},"4174":{"b":4173,"f":"mongo::userAllowedWriteNS(mongo::NamespaceString const&)"},"4175":{"b":4174,"f":"mongo::userAllowedWriteNS(mongo::StringData const&, mongo::StringData const&)"},"4176":{"b":4175,"f":"__nss_hosts_lookup"},"4177":{"b":4001,"f":"std::string::append(char const*, unsigned long)"},"4178":{"b":3936,"f":"mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)"},"4179":{"b":4178,"f":"mongo::mutablebson::Element::addChild(mongo::mutablebson::Element, bool)"},"4180":{"b":3814,"f":"mongo::UpdateStage::makeUpdateResult(mongo::PlanExecutor*, mongo::OpDebug*)"},"4181":{"b":4180,"f":"mongo::Explain::getSummaryStats(mongo::PlanExecutor*, mongo::PlanSummaryStats*)"},"4182":{"b":4181,"f":"(anonymous namespace)::flattenExecTree(mongo::PlanStage*, std::vector<mongo::PlanStage*, std::allocator<mongo::PlanStage*> >*)"},"4183":{"b":4182,"f":"(anonymous namespace)::flattenExecTree(mongo::PlanStage*, std::vector<mongo::PlanStage*, std::allocator<mongo::PlanStage*> >*)"},"4184":{"b":4183,"f":"void std::vector<mongo::PlanStage*, std::allocator<mongo::PlanStage*> >::_M_emplace_back_aux<mongo::PlanStage* const&>(mongo::PlanStage* const&)"},"4185":{"b":4184,"f":"__nss_hosts_lookup"},"4186":{"b":3814,"f":"tc_delete"},"4187":{"b":4043,"f":"mongo::MMAPV1Engine::newRecoveryUnit()"},"4188":{"b":4187,"f":"operator new(unsigned long)"},"4189":{"b":3808,"f":"mongo::Command::findCommand(mongo::StringData const&)"},"4190":{"b":4189,"f":"mongo::StringData::Hasher::operator()(mongo::StringData const&) const"},"4191":{"b":4190,"f":"MurmurHash3_x64_128(void const*, int, unsigned int, void*)"},"4192":{"b":3782,"f":"mongo::DurRecoveryUnit::beginUnitOfWork(mongo::OperationContext*)"},"4193":{"b":4042,"f":"lttng_event_commit"},"4194":{"b":3814,"f":"mongo::WriteBatchExecutor::incWriteStats(mongo::BatchItemRef const&, mongo::WriteOpStats const&, mongo::WriteErrorDetail const*, mongo::CurOp*)"},"4195":{"b":3789,"f":"mongo::inShutdown()"},"4196":{"b":3957,"f":"mongo::BtreeBasedAccessMethod::BtreeBasedPrivateUpdateData::~BtreeBasedPrivateUpdateData()"},"4197":{"b":4196,"f":"std::_Rb_tree<mongo::BSONObj, mongo::BSONObj, std::_Identity<mongo::BSONObj>, mongo::BSONObjCmp, std::allocator<mongo::BSONObj> >::_M_erase(std::_Rb_tree_node<mongo::BSONObj>*)"},"4198":{"b":4197,"f":"mongo::intrusive_ptr_release(mongo::SharedBuffer::Holder*)"},"4199":{"b":3865,"f":"mongo::mongoMalloc(unsigned long)"},"4200":{"b":4199,"f":"malloc"},"4201":{"b":3806,"f":"mongo::StringData::compare(mongo::StringData const&) const"},"4202":{"b":4201,"f":"__nss_hosts_lookup"},"4203":{"b":4094,"f":"ctx_record.part.8"},"4204":{"b":4203,"f":"vtid_record"},"4205":{"b":4037,"f":"mongo::AuthzSessionExternalStateServerCommon::_checkShouldAllowLocalhost(mongo::OperationContext*)"},"4206":{"b":4205,"f":"mongo::AuthorizationManager::isAuthEnabled() const"},"4207":{"b":3782,"f":"_obstack_memory_used"},"4208":{"b":3833,"f":"mongo::ScopedTimer::ScopedTimer(long long*)"},"4209":{"b":3825,"f":"mongo::CurOp::setNS(mongo::StringData const&)"},"4210":{"b":4209,"f":"envz_strip"},"4211":{"b":3902,"f":"mongo::UpdateIndexData::mightBeIndexed(mongo::StringData const&) const"},"4212":{"b":3853,"f":"mongo::UpdateDriver::makeOplogEntryQuery(mongo::BSONObj const&, bool) const"},"4213":{"b":3838,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"4214":{"b":4124,"f":"mongo::mutablebson::Document::Impl::getFieldName(mongo::mutablebson::(anonymous namespace)::ElementRep const&) const"},"4215":{"b":4214,"f":"strlen"},"4216":{"b":3814,"f":"mongo::UpdateLifecycleImpl::UpdateLifecycleImpl(bool, mongo::NamespaceString const&)"},"4217":{"b":4047,"f":"__nss_hosts_lookup"},"4218":{"b":3782,"f":"mongo::WriteUnitOfWork::WriteUnitOfWork(mongo::OperationContext*)"},"4219":{"b":4094,"f":"sched_getcpu"},"4220":{"b":3898,"f":"std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const"},"4221":{"b":3782,"f":"mongo::UpdateStage::getSpecificStats()"},"4222":{"b":3794,"f":"__pthread_disable_asynccancel"},"4223":{"b":3806,"f":"mongo::AuthorizationSession::_refreshUserInfoAsNeeded(mongo::OperationContext*)"},"4224":{"b":4223,"f":"mongo::AuthzSessionExternalState::getAuthorizationManager()"},"4225":{"b":3782,"f":"mongo::RecordStoreV1Base::dataFor(mongo::OperationContext*, mongo::RecordId const&) const"},"4226":{"b":3869,"f":"mongo::(anonymous namespace)::storageValid(mongo::mutablebson::ConstElement const&, bool)"},"4227":{"b":3782,"f":"mongo::Command::adminOnly() const"},"4228":{"b":3851,"f":"memchr"},"4229":{"b":3865,"f":"mongo::BSONObjBuilderValueStream::endField(mongo::StringData const&)"},"4230":{"b":3806,"f":"mongo::SockAddr::SockAddr()"},"4231":{"b":4022,"f":"mongo::DiskLoc::toRecordId() const"},"4232":{"b":4203,"f":"vpid_record"},"4233":{"b":4232,"f":"__getpid"},"4234":{"b":3782,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getBucket(mongo::OperationContext*, mongo::RecordId) const"},"4235":{"b":3815,"f":"mongo::LockerImpl<true>::lock(mongo::ResourceId, mongo::LockMode, unsigned int, bool)"},"4236":{"b":4235,"f":"mongo::LockerImpl<true>::lockBegin(mongo::ResourceId, mongo::LockMode)"},"4237":{"b":3929,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getRoot(mongo::OperationContext*) const"},"4238":{"b":4237,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getBucket(mongo::OperationContext*, mongo::RecordId) const"},"4239":{"b":4054,"f":"mongo::LockStats<long>::reset()"},"4240":{"b":3978,"f":"mongo::Lock::GlobalLock::_lock(mongo::LockMode, unsigned int)"},"4241":{"b":4240,"f":"boost::detail::get_tss_data(void const*)"},"4242":{"b":4241,"f":"boost::detail::find_tss_data(void const*)"},"4243":{"b":4242,"f":"boost::detail::get_current_thread_data()"},"4244":{"b":4243,"f":"void boost::call_once<void (*)()>(boost::once_flag&, void (*)()) [clone .constprop.52]"},"4245":{"b":4244,"f":"boost::detail::get_once_per_thread_epoch()"},"4246":{"b":4245,"f":"pthread_getspecific"},"4247":{"b":4000,"f":"envz_strip"},"4248":{"b":3807,"f":"mongo::BSONObjBuilder::BSONObjBuilder(int)"},"4249":{"b":4021,"f":"mongo::KeyV1Owned::KeyV1Owned(mongo::BSONObj const&)"},"4250":{"b":4240,"f":"mongo::LockerImpl<true>::lockGlobalBegin(mongo::LockMode)"},"4251":{"b":4250,"f":"mongo::LockerImpl<true>::lockBegin(mongo::ResourceId, mongo::LockMode)"},"4252":{"b":4251,"f":"mongo::LockManager::lock(mongo::ResourceId, mongo::LockRequest*, mongo::LockMode)"},"4253":{"b":3968,"f":"mongo::Collection::recordStoreGoingToUpdateInPlace(mongo::OperationContext*, mongo::RecordId const&)"},"4254":{"b":4253,"f":"mongo::CursorManager::invalidateDocument(mongo::OperationContext*, mongo::RecordId const&, mongo::InvalidationType)"},"4255":{"b":4254,"f":"mongo::UpdateStage::invalidate(mongo::OperationContext*, mongo::RecordId const&, mongo::InvalidationType)"},"4256":{"b":4041,"f":"getc"},"4257":{"b":4203,"f":"lib_ring_buffer_write.constprop.28"},"4258":{"b":4257,"f":"envz_strip"},"4259":{"b":3809,"f":"mongo::Command::appendCommandStatus(mongo::BSONObjBuilder&, bool, std::string const&)"},"4260":{"b":4259,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"4261":{"b":4240,"f":"operator new(unsigned long)"},"4262":{"b":3869,"f":"mongo::FieldRefSet::findConflicts(mongo::FieldRef const*, mongo::FieldRefSet*) const"},"4263":{"b":4262,"f":"mongo::FieldRef::FieldRef(mongo::StringData const&)"},"4264":{"b":4263,"f":"mongo::FieldRef::parse(mongo::StringData const&)"},"4265":{"b":4264,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"4266":{"b":4265,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"4267":{"b":4266,"f":"envz_strip"},"4268":{"b":4248,"f":"mongo::BSONObjBuilderValueStream::BSONObjBuilderValueStream(mongo::BSONObjBuilder*)"},"4269":{"b":3861,"f":"mongo::(anonymous namespace)::_todb(mongo::StringData const&)"},"4270":{"b":4269,"f":"memchr"},"4271":{"b":4091,"f":"tc_delete"},"4272":{"b":4118,"f":"vtid_record"},"4273":{"b":3834,"f":"mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj const&, bool) const"},"4274":{"b":4273,"f":"mongo::compareElementValues(mongo::BSONElement const&, mongo::BSONElement const&)"},"4275":{"b":3860,"f":"std::_Rb_tree_increment(std::_Rb_tree_node_base const*)"},"4276":{"b":3782,"f":"std::string::swap(std::string&)"},"4277":{"b":3807,"f":"envz_strip"},"4278":{"b":4127,"f":"mongo::HostAndPort::operator==(mongo::HostAndPort const&) const"},"4279":{"b":4142,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_locate(mongo::OperationContext*, mongo::DiskLoc const&, mongo::KeyV1 const&, int*, bool*, mongo::DiskLoc const&, int) const"},"4280":{"b":4279,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_find(mongo::OperationContext*, mongo::BtreeBucketV1*, mongo::KeyV1 const&, mongo::DiskLoc const&, bool, int*, bool*) const"},"4281":{"b":4280,"f":"mongo::KeyV1::woCompare(mongo::KeyV1 const&, mongo::Ordering const&) const"},"4282":{"b":3809,"f":"mongo::CurOp::ensureStarted()"},"4283":{"b":4282,"f":"mongo::curTimeMicros64()"},"4284":{"b":4109,"f":"__gxx_personality_v0@@CXXABI_1.3"},"4285":{"b":4109,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"4286":{"b":3851,"f":"operator new(unsigned long)"},"4287":{"b":4118,"f":"vpid_record"},"4288":{"b":4287,"f":"lib_ring_buffer_write.constprop.28"},"4289":{"b":3806,"f":"mongo::ClientBasic::getAuthorizationSession() const"},"4290":{"b":3892,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::assertValid(std::string const&, mongo::BtreeBucketV1*, mongo::Ordering const&, bool)"},"4291":{"b":3807,"f":"mongo::BSONObjBuilder::~BSONObjBuilder()"},"4292":{"b":4291,"f":"__libc_free"},"4293":{"b":3806,"f":"envz_strip"},"4294":{"b":3842,"f":"mongo::ClientBasic::getAuthorizationSession() const"},"4295":{"b":3811,"f":"tc_delete"},"4296":{"b":3814,"f":"mongo::ScopedTransaction::~ScopedTransaction()"},"4297":{"b":4091,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)"},"4298":{"b":4297,"f":"getc"},"4299":{"b":3972,"f":"mongo::mongoMalloc(unsigned long)"},"4300":{"b":4299,"f":"malloc"},"4301":{"b":3814,"f":"mongo::PlanExecutor::~PlanExecutor()"},"4302":{"b":4301,"f":"mongo::WorkingSet::~WorkingSet()"},"4303":{"b":4302,"f":"mongo::WorkingSetMember::~WorkingSetMember()"},"4304":{"b":3814,"f":"mongo::CurOp::CurOp(mongo::Client*, mongo::CurOp*)"},"4305":{"b":4304,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)"},"4306":{"b":3854,"f":"mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData const&) const"},"4307":{"b":4236,"f":"mongo::LockRequest::initNew(mongo::Locker*, mongo::LockGrantNotification*)"},"4308":{"b":4062,"f":"mongo::KeyV1::woCompare(mongo::KeyV1 const&, mongo::Ordering const&) const"},"4309":{"b":4075,"f":"lib_ring_buffer_strcpy.constprop.27"},"4310":{"b":4197,"f":"__libc_free"},"4311":{"b":4011,"f":"mongo::DurRecoveryUnit::getSnapshotId() const"},"4312":{"b":3838,"f":"mongo::IndexCatalog::findIdIndex(mongo::OperationContext*) const"},"4313":{"b":4312,"f":"mongo::IndexCatalog::IndexIterator::more()"},"4314":{"b":4313,"f":"mongo::IndexCatalog::IndexIterator::_advance()"},"4315":{"b":3935,"f":"mongo::mutablebson::Document::makeElementSafeNum(mongo::StringData const&, mongo::SafeNum)"},"4316":{"b":4315,"f":"mongo::mutablebson::Document::makeElementDouble(mongo::StringData const&, double)"},"4317":{"b":4316,"f":"mongo::mutablebson::Document::Impl::insertLeafElement(int, int)"},"4318":{"b":4047,"f":"mongo::FieldParser::extract(mongo::BSONElement, mongo::BSONField<mongo::BSONObj> const&, mongo::BSONObj*, std::string*)"},"4319":{"b":4318,"f":"mongo::BSONElement::embeddedObject() const"},"4320":{"b":3833,"f":"mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*) const"},"4321":{"b":4320,"f":"mongo::IndexCatalog::getEntry(mongo::IndexDescriptor const*) const"},"4322":{"b":4321,"f":"mongo::IndexCatalogEntryContainer::find(mongo::IndexDescriptor const*) const"},"4323":{"b":3817,"f":"sys:unknown"},"4324":{"b":4226,"f":"mongo::mutablebson::Element::getFieldName() const"},"4325":{"b":3809,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"4326":{"b":3858,"f":"mongo::IndexCatalog::IndexIterator::more()"},"4327":{"b":3882,"f":"mongo::PlanExecutor::PlanExecutor(mongo::OperationContext*, mongo::WorkingSet*, mongo::PlanStage*, mongo::QuerySolution*, mongo::CanonicalQuery*, mongo::Collection const*, std::string const&)"},"4328":{"b":3853,"f":"mongo::mutablebson::Document::reset(mongo::BSONObj const&, mongo::mutablebson::Document::InPlaceMode)"},"4329":{"b":4328,"f":"mongo::mutablebson::Document::makeRootElement(mongo::BSONObj const&)"},"4330":{"b":4329,"f":"mongo::mutablebson::Document::Impl::makeNewRep(unsigned int*)"},"4331":{"b":4126,"f":"mongo::BSONElement::size() const"},"4332":{"b":3814,"f":"mongo::finishCurrentOp(mongo::OperationContext*, mongo::CurOp*, mongo::WriteErrorDetail*)"},"4333":{"b":4332,"f":"mongo::curTimeMicros64()"},"4334":{"b":3847,"f":"memset"},"4335":{"b":3816,"f":"tzset"},"4336":{"b":4335,"f":"adjtime"},"4337":{"b":4170,"f":"boost::detail::get_tss_data(void const*)"},"4338":{"b":4060,"f":"mongo::CursorManager::registerExecutor(mongo::PlanExecutor*)"},"4339":{"b":4338,"f":"std::_Hashtable<mongo::PlanExecutor*, mongo::PlanExecutor*, std::allocator<mongo::PlanExecutor*>, std::__detail::_Identity, std::equal_to<mongo::PlanExecutor*>, std::hash<mongo::PlanExecutor*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<mongo::PlanExecutor*, false>*)"},"4340":{"b":4339,"f":"std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const"},"4341":{"b":3902,"f":"mongo::ModifierInc::apply() const"},"4342":{"b":4341,"f":"mongo::mutablebson::Element::setValueSafeNum(mongo::SafeNum)"},"4343":{"b":4342,"f":"mongo::mutablebson::Element::setValueDouble(double)"},"4344":{"b":4343,"f":"mongo::mutablebson::Document::makeElementDouble(mongo::StringData const&, double)"},"4345":{"b":4344,"f":"mongo::mutablebson::Document::Impl::insertLeafElement(int, int)"},"4346":{"b":4345,"f":"void mongo::_BufBuilder<mongo::TrivialAllocator>::appendNumImpl<char>(char)"},"4347":{"b":3814,"f":"tp_rcu_read_lock_bp"},"4348":{"b":4158,"f":"__pthread_mutex_lock"},"4349":{"b":4348,"f":"_L_lock_909"},"4350":{"b":4349,"f":"__lll_lock_wait"},"4351":{"b":3809,"f":"mongo::repl::ReplicationCoordinatorImpl::canAcceptWritesForDatabase(mongo::StringData const&)"},"4352":{"b":3842,"f":"mongo::OperationContextImpl::getCurOp() const"},"4353":{"b":4105,"f":"mongo::logOpForDbHash(char const*)"},"4354":{"b":4353,"f":"mongo::DBHashCmd::wipeCacheForCollection(mongo::StringData const&)"},"4355":{"b":3782,"f":"mongo::MessagingPort::remote() const"},"4356":{"b":3883,"f":"mongo::PlanExecutor::setYieldPolicy(mongo::PlanExecutor::YieldPolicy, bool)"},"4357":{"b":4356,"f":"mongo::PlanYieldPolicy::PlanYieldPolicy(mongo::PlanExecutor*)"},"4358":{"b":4357,"f":"mongo::ElapsedTracker::ElapsedTracker(int, int)"},"4359":{"b":3982,"f":"mongo::ModifierInc::init(mongo::BSONElement const&, mongo::ModifierInterface::Options const&, bool*)"},"4360":{"b":4359,"f":"mongo::SafeNum::SafeNum(mongo::BSONElement const&)"},"4361":{"b":3868,"f":"operator new(unsigned long)"},"4362":{"b":3938,"f":"_ZNKSt9bad_alloc4whatEv@@GLIBCXX_3.4.9"},"4363":{"b":3903,"f":"operator new(unsigned long)"},"4364":{"b":3832,"f":"mongo::UpdateStage::isEOF()"},"4365":{"b":3983,"f":"mongo::StringData::Hasher::operator()(mongo::StringData const&) const"},"4366":{"b":4365,"f":"MurmurHash3_x64_128(void const*, int, unsigned int, void*)"},"4367":{"b":3832,"f":"mongo::ScopedTimer::ScopedTimer(long long*)"},"4368":{"b":4050,"f":"mongo::LockerImpl<true>::inAWriteUnitOfWork() const"},"4369":{"b":3948,"f":"mongo::(anonymous namespace)::timerNowPosixMonotonicClock()"},"4370":{"b":4369,"f":"clock_gettime"},"4371":{"b":4370,"f":"Unknown Symbol"},"4372":{"b":4105,"f":"envz_strip"},"4373":{"b":4304,"f":"_ZNKSt9exception4whatEv@@GLIBCXX_3.4"},"4374":{"b":3782,"f":"_fini"},"4375":{"b":4374,"f":"Unknown Symbol"},"4376":{"b":4375,"f":"mongo::UpdateDriver::setContext(mongo::ModifierInterface::ExecInfo::UpdateContext)"},"4377":{"b":4087,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"4378":{"b":4377,"f":"mongo::BSONElement::size() const"},"4379":{"b":4105,"f":"mongo::logOpForSharding(mongo::OperationContext*, char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, bool)"},"4380":{"b":4379,"f":"mongo::MigrateFromStatus::logOp(mongo::OperationContext*, char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, bool)"},"4381":{"b":4149,"f":"mongo::LockerImpl<true>::isLocked() const"},"4382":{"b":4328,"f":"mongo::BSONObjBuilder::BSONObjBuilder(mongo::_BufBuilder<mongo::TrivialAllocator>&)"},"4383":{"b":3876,"f":"envz_strip"},"4384":{"b":3814,"f":"mongo::CurOp::~CurOp()"},"4385":{"b":4116,"f":"mongo::dur::(anonymous namespace)::DurableImpl::declareWriteIntents(std::vector<std::pair<void*, unsigned int>, std::allocator<std::pair<void*, unsigned int> > > const&)"},"4386":{"b":4385,"f":"__pthread_mutex_lock"},"4387":{"b":4182,"f":"mongo::UpdateStage::getChildren() const"},"4388":{"b":3806,"f":"mongo::logger::globalLogManager()"},"4389":{"b":4378,"f":"mongo::BSONElement::fieldNameSize() const"},"4390":{"b":3825,"f":"_ZNKSt9exception4whatEv@@GLIBCXX_3.4"},"4391":{"b":3834,"f":"mongo::intrusive_ptr_release(mongo::SharedBuffer::Holder*)"},"4392":{"b":3957,"f":"tc_delete"},"4393":{"b":3832,"f":"mongo::WorkingSet::free(unsigned long const&)"},"4394":{"b":4393,"f":"mongo::WorkingSetMember::clear()"},"4395":{"b":3806,"f":"mongo::NamespaceString::NamespaceString(mongo::StringData const&)"},"4396":{"b":4395,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"4397":{"b":4396,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"4398":{"b":4397,"f":"std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)"},"4399":{"b":4398,"f":"operator new(unsigned long)"},"4400":{"b":4304,"f":"mongo::mongoMalloc(unsigned long)"},"4401":{"b":4400,"f":"malloc"},"4402":{"b":3805,"f":"mongo::MessagingPort::say(mongo::Message&, int)"},"4403":{"b":4402,"f":"mongo::nextMessageId()"},"4404":{"b":4041,"f":"std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long)"},"4405":{"b":4404,"f":"std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)"},"4406":{"b":4405,"f":"operator new(unsigned long)"},"4407":{"b":3837,"f":"mongo::mongoMalloc(unsigned long)"},"4408":{"b":4407,"f":"malloc"},"4409":{"b":3849,"f":"mongo::DbMessage::pullInt()"},"4410":{"b":3782,"f":"__tls_get_addr"},"4411":{"b":3814,"f":"mongo::DurRecoveryUnit::commitAndRestart()"},"4412":{"b":4238,"f":"mongo::RecordStoreV1Base::dataFor(mongo::OperationContext*, mongo::RecordId const&) const"},"4413":{"b":4412,"f":"mongo::MmapV1ExtentManager::recordForV1(mongo::DiskLoc const&) const"},"4414":{"b":4413,"f":"mongo::RecordAccessTracker::markAccessed(void const*)"},"4415":{"b":3853,"f":"mongo::FieldRefSet::FieldRefSet()"},"4416":{"b":4129,"f":"std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)"},"4417":{"b":4416,"f":"getc"},"4418":{"b":4147,"f":"mongo::LockManager::lock(mongo::ResourceId, mongo::LockRequest*, mongo::LockMode)"},"4419":{"b":3812,"f":"mongo::validateWriteConcern(mongo::WriteConcernOptions const&)"},"4420":{"b":4419,"f":"mongo::MMAPV1Engine::isDurable() const"},"4421":{"b":4252,"f":"mongo::LockManager::_getPartition(mongo::LockRequest*) const"},"4422":{"b":3816,"f":"boost::this_thread::interruption_point()"},"4423":{"b":4422,"f":"boost::detail::get_current_thread_data()"},"4424":{"b":4423,"f":"void boost::call_once<void (*)()>(boost::once_flag&, void (*)()) [clone .constprop.52]"},"4425":{"b":4356,"f":"operator new(unsigned long)"},"4426":{"b":3858,"f":"operator new(unsigned long)"},"4427":{"b":3838,"f":"_obstack_memory_used"},"4428":{"b":3814,"f":"mongo::checkShardVersion(mongo::OperationContext*, mongo::ShardingState*, mongo::BatchedCommandRequest const&, mongo::(anonymous namespace)::WriteOpResult*) [clone .isra.268] [clone .constprop.283]"},"4429":{"b":4428,"f":"mongo::OID::init(mongo::Date_t, bool)"},"4430":{"b":4429,"f":"mongo::OID::setTimestamp(int)"},"4431":{"b":4014,"f":"mongo::compareElementValues(mongo::BSONElement const&, mongo::BSONElement const&)"},"4432":{"b":3782,"f":"pthread_spin_trylock"},"4433":{"b":3782,"f":"mongo::MmapV1ExtentManager::_getOpenFile(int) const"},"4434":{"b":4337,"f":"boost::detail::find_tss_data(void const*)"},"4435":{"b":3806,"f":"mongo::curTimeMicros64()"},"4436":{"b":4435,"f":"Unknown Symbol"},"4437":{"b":4280,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getFullKey(mongo::BtreeBucketV1 const*, int)"},"4438":{"b":4347,"f":"__tls_get_addr"},"4439":{"b":4069,"f":"operator new(unsigned long)"},"4440":{"b":3824,"f":"pthread_mutex_unlock"},"4441":{"b":4440,"f":"_L_unlock_722"},"4442":{"b":4441,"f":"__lll_unlock_wake"},"4443":{"b":4262,"f":"mongo::FieldRefSet::FieldRefPtrLessThan::operator()(mongo::FieldRef const*, mongo::FieldRef const*) const"},"4444":{"b":4443,"f":"mongo::FieldRef::compare(mongo::FieldRef const&) const"},"4445":{"b":4444,"f":"mongo::FieldRef::getPart(unsigned long) const"},"4446":{"b":3782,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)"},"4447":{"b":3812,"f":"_ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi@@GLIBCXX_3.4"},"4448":{"b":4297,"f":"char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)"},"4449":{"b":4448,"f":"std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)"},"4450":{"b":4449,"f":"operator new(unsigned long)"},"4451":{"b":3858,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"4452":{"b":4451,"f":"mongo::BSONElement::size() const"},"4453":{"b":4452,"f":"strlen"},"4454":{"b":3805,"f":"mongo::inShutdown()"},"4455":{"b":3782,"f":"std::string::_Rep::_M_dispose(std::allocator<char> const&)"},"4456":{"b":3842,"f":"mongo::KeyV1::woCompare(mongo::KeyV1 const&, mongo::Ordering const&) const"},"4457":{"b":4245,"f":"__pthread_once"},"4458":{"b":3814,"f":"mongo::UpdateRequest::~UpdateRequest()"},"4459":{"b":4387,"f":"void std::vector<mongo::PlanStage*, std::allocator<mongo::PlanStage*> >::_M_emplace_back_aux<mongo::PlanStage*>(mongo::PlanStage*&&)"},"4460":{"b":4459,"f":"operator new(unsigned long)"},"4461":{"b":4104,"f":"mongo::LockerImpl<true>::lockBegin(mongo::ResourceId, mongo::LockMode)"},"4462":{"b":3858,"f":"mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)"},"4463":{"b":4462,"f":"mongo::IndexCatalogEntryContainer::find(mongo::IndexDescriptor const*)"},"4464":{"b":3995,"f":"void std::vector<mongo::DurRecoveryUnit::Write, std::allocator<mongo::DurRecoveryUnit::Write> >::_M_emplace_back_aux<mongo::DurRecoveryUnit::Write>(mongo::DurRecoveryUnit::Write&&)"},"4465":{"b":4106,"f":"mongo::mongoMalloc(unsigned long)"},"4466":{"b":4465,"f":"malloc"},"4467":{"b":4043,"f":"mongo::Client::setOperationContext(mongo::OperationContext*)"},"4468":{"b":4273,"f":"mongo::BSONElement::woCompare(mongo::BSONElement const&, bool) const"},"4469":{"b":4076,"f":"sched_getcpu"},"4470":{"b":4169,"f":"mongo::LockerImpl<true>::unlock(mongo::ResourceId)"},"4471":{"b":4470,"f":"mongo::LockerImpl<true>::_unlockImpl(mongo::FastMapNoAlloc<mongo::ResourceId, mongo::LockRequest, 16>::IteratorImpl<mongo::FastMapNoAlloc<mongo::ResourceId, mongo::LockRequest, 16>, mongo::LockRequest>&)"},"4472":{"b":4471,"f":"mongo::LockManager::unlock(mongo::LockRequest*)"},"4473":{"b":3862,"f":"mongo::isModeCovered(mongo::LockMode, mongo::LockMode)"},"4474":{"b":4384,"f":"_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPcl@@GLIBCXX_3.4"},"4475":{"b":3881,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)"},"4476":{"b":4279,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getBucket(mongo::OperationContext*, mongo::RecordId) const"},"4477":{"b":4476,"f":"mongo::RecordStoreV1Base::dataFor(mongo::OperationContext*, mongo::RecordId const&) const"},"4478":{"b":4477,"f":"mongo::MmapV1ExtentManager::recordForV1(mongo::DiskLoc const&) const"},"4479":{"b":4478,"f":"mongo::RecordAccessTracker::markAccessed(void const*)"},"4480":{"b":4397,"f":"envz_strip"},"4481":{"b":4260,"f":"mongo::BSONElement::size() const"},"4482":{"b":3867,"f":"mongo::BSONObj::getField(mongo::StringData const&) const"},"4483":{"b":4482,"f":"mongo::BSONElement::size() const"},"4484":{"b":4301,"f":"tc_delete"},"4485":{"b":4304,"f":"mongo::HostAndPort::HostAndPort()"},"4486":{"b":4328,"f":"std::string::_M_mutate(unsigned long, unsigned long, unsigned long)"},"4487":{"b":4124,"f":"mongo::_BufBuilder<mongo::TrivialAllocator>::appendStr(mongo::StringData const&, bool) [clone .constprop.175]"},"4488":{"b":3814,"f":"tp_rcu_read_unlock_bp"},"4489":{"b":4384,"f":"__libc_free"},"4490":{"b":4226,"f":"__nss_hosts_lookup"},"4491":{"b":4107,"f":"operator new(unsigned long)"},"4492":{"b":3888,"f":"lttng_event_commit"},"4493":{"b":3782,"f":"mongo::DurRecoveryUnit::getSnapshotId() const"},"4494":{"b":4251,"f":"mongo::LockerImpl<true>::getWaitingResource() const"},"4495":{"b":3814,"f":"mongo::uassertStatusOK(mongo::Status const&)"},"4496":{"b":4028,"f":"mongo::LockerImpl<true>::_getModeForMMAPV1FlushLock() const"},"4497":{"b":4496,"f":"mongo::LockerImpl<true>::getLockMode(mongo::ResourceId) const"},"4498":{"b":3842,"f":"mongo::(anonymous namespace)::storageValidChildren(mongo::mutablebson::ConstElement const&, bool)"},"4499":{"b":4062,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getFullKey(mongo::BtreeBucketV1 const*, int)"},"4500":{"b":3782,"f":"mongo::prepareErrForNewRequest(mongo::Message&, mongo::LastError*)"},"4501":{"b":3815,"f":"mongo::curTimeMicros64()"},"4502":{"b":4501,"f":"Unknown Symbol"},"4503":{"b":3782,"f":"std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)"},"4504":{"b":3861,"f":"mongo::UnorderedFastKeyTable<mongo::StringData, std::string, mongo::Database*, mongo::StringData::Hasher, mongo::StringMapDefaultEqual, mongo::StringMapDefaultConvertor, mongo::StringMapDefaultConvertorOther>::Area::find(mongo::StringData const&, unsigned long, int*, mongo::UnorderedFastKeyTable<mongo::StringData, std::string, mongo::Database*, mongo::StringData::Hasher, mongo::StringMapDefaultEqual, mongo::StringMapDefaultConvertor, mongo::StringMapDefaultConvertorOther> const&) const [clone .constprop.173]"},"4505":{"b":4504,"f":"__nss_hosts_lookup"},"4506":{"b":3858,"f":"mongo::IndexCatalog::IndexIterator::next()"},"4507":{"b":3931,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::_find(mongo::OperationContext*, mongo::BtreeBucketV1*, mongo::KeyV1 const&, mongo::DiskLoc const&, bool, int*, bool*) const"},"4508":{"b":4507,"f":"mongo::BtreeLogic<mongo::BtreeLayoutV1>::getFullKey(mongo::BtreeBucketV1 const*, int)"},"4509":{"b":3782,"f":"sys:exit"},"4510":{"b":3782,"f":"sys:shutdown"},"4511":{"b":3782,"f":"sys:close"},"4512":{"b":3782,"f":"sys:madvise"}}}